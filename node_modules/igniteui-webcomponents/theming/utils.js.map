{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/theming/utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,KAAK,CAAC;AAE/B,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AAEzD,SAAS,YAAY,CAAC,IAAa;IACjC,OAAO,CAAC,CAAC,IAAI,IAAI,OAAO,IAAI,IAAI,CAAC;AACnC,CAAC;AAED,SAAS,aAAa,CAAC,GAAW;IAChC,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC;AAED,SAAS,sBAAsB;IAC7B,MAAM,OAAO,GAAG,IAAI,GAAG,EAAU,CAAC;IAElC,IAAI,QAAQ,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;QAChD,OAAO,OAAO,CAAC;IACjB,CAAC;IAGD,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,MAAM,CACpE,CAAC,KAAK,EAAE,EAAE;QACR,IAAI,CAAC;YACH,OAAO,KAAK,CAAC,QAAQ,CAAC;QACxB,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,OAAO,KAAK,CAAC;QACf,CAAC;IACH,CAAC,CACF,CAAC;IAEF,KAAK,MAAM,KAAK,IAAI,WAAW,EAAE,CAAC;QAChC,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAE9D,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YACzB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;gBACvC,IAAI,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;oBAC3B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAS,sBAAsB,CAC7B,UAAuB,EACvB,OAAoB,EACpB,MAAe;IAEf,MAAM,OAAO,GAA2B,EAAE,CAAC;IAE3C,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAE,CAAC;QAC5C,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,MAAM,MAAM,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAE5D,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC7B,MAAM,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;QAE3C,IAAI,KAAK,EAAE,CAAC;YACV,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QAC7C,CAAC;IACH,CAAC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,MAAM,UAAU,kBAAkB;IAChC,OAAO,QAAQ,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC;QAChD,CAAC,CAAC,EAAE;QACJ,CAAC,CAAC,sBAAsB,CACpB,sBAAsB,EAAE,EACxB,UAAU,CAAC,QAAQ,CAAC,eAAe,CACpC,CAAC;AACR,CAAC","sourcesContent":["import { isServer } from 'lit';\n\nimport { isDefined } from '../components/common/util.js';\n\nfunction isAStyleRule(rule: CSSRule): rule is CSSStyleRule {\n  return !!rule && 'style' in rule;\n}\n\nfunction cssKeyToJsKey(key: string): string {\n  return key.replace('--', '').replace(/-./g, (x) => x.toUpperCase()[1]);\n}\n\nfunction getAllCSSVariableNames(): Set<string> {\n  const cssVars = new Set<string>();\n\n  if (isServer || !isDefined(globalThis.document)) {\n    return cssVars;\n  }\n\n  // Filter out any external stylesheets which throw CORS errors\n  const styleSheets = Array.from(globalThis.document.styleSheets).filter(\n    (sheet) => {\n      try {\n        return sheet.cssRules;\n      } catch (e) {\n        return false;\n      }\n    }\n  );\n\n  for (const sheet of styleSheets) {\n    const rules = Array.from(sheet.cssRules).filter(isAStyleRule);\n\n    for (const rule of rules) {\n      Array.from(rule.style).forEach((style) => {\n        if (style.startsWith('--')) {\n          cssVars.add(style);\n        }\n      });\n    }\n  }\n\n  return cssVars;\n}\n\nfunction getElementCSSVariables(\n  allCSSVars: Set<string>,\n  element: HTMLElement,\n  pseudo?: string\n): Record<string, string> {\n  const cssVars: Record<string, string> = {};\n\n  if (!isDefined(globalThis.getComputedStyle)) {\n    return cssVars;\n  }\n\n  const styles = globalThis.getComputedStyle(element, pseudo);\n\n  for (const key of allCSSVars) {\n    const value = styles.getPropertyValue(key);\n\n    if (value) {\n      cssVars[cssKeyToJsKey(key)] = value.trim();\n    }\n  }\n\n  return cssVars;\n}\n\nexport function getAllCSSVariables(): Record<string, string> {\n  return isServer || !isDefined(globalThis.document)\n    ? {}\n    : getElementCSSVariables(\n        getAllCSSVariableNames(),\n        globalThis.document.documentElement\n      );\n}\n"]}