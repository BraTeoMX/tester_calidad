{"version":3,"file":"dropdown.js","sourceRoot":"","sources":["../../../src/components/dropdown/dropdown.ts"],"names":[],"mappings":"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","sourcesContent":["import { html } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\n\nimport { themes } from '../../theming/theming-decorator.js';\nimport {\n  type KeyBindingObserverCleanup,\n  addKeybindings,\n  arrowDown,\n  arrowLeft,\n  arrowRight,\n  arrowUp,\n  endKey,\n  enterKey,\n  escapeKey,\n  homeKey,\n  tabKey,\n} from '../common/controllers/key-bindings.js';\nimport { addRootClickHandler } from '../common/controllers/root-click.js';\nimport { addRootScrollHandler } from '../common/controllers/root-scroll.js';\nimport { blazorAdditionalDependencies } from '../common/decorators/blazorAdditionalDependencies.js';\nimport { blazorSuppress } from '../common/decorators/blazorSuppress.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { registerComponent } from '../common/definitions/register.js';\nimport {\n  IgcBaseComboBoxLikeComponent,\n  getActiveItems,\n  getItems,\n  getNextActiveItem,\n  getPreviousActiveItem,\n  setInitialSelectionState,\n} from '../common/mixins/combo-box.js';\nimport type { AbstractConstructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { SizableMixin } from '../common/mixins/sizable.js';\nimport {\n  findElementFromEventPath,\n  getElementByIdFromRoot,\n} from '../common/util.js';\nimport IgcPopoverComponent, { type IgcPlacement } from '../popover/popover.js';\nimport IgcDropdownGroupComponent from './dropdown-group.js';\nimport IgcDropdownHeaderComponent from './dropdown-header.js';\nimport IgcDropdownItemComponent from './dropdown-item.js';\nimport { all } from './themes/container.js';\nimport { styles } from './themes/dropdown.base.css.js';\nimport { styles as shared } from './themes/shared/dropdown.common.css.js';\n\nexport interface IgcDropdownEventMap {\n  igcOpening: CustomEvent<void>;\n  igcOpened: CustomEvent<void>;\n  igcClosing: CustomEvent<void>;\n  igcClosed: CustomEvent<void>;\n  igcChange: CustomEvent<IgcDropdownItemComponent>;\n}\n\n/**\n * Represents a DropDown component.\n *\n * @element igc-dropdown\n *\n * @fires igcChange - Emitted when the selected item changes.\n * @fires igcOpening - Emitted just before the dropdown is open.\n * @fires igcOpened - Emitted after the dropdown is open.\n * @fires igcClosing - Emitter just before the dropdown is closed.\n * @fires igcClosed - Emitted after closing the dropdown.\n *\n * @slot target - Renders the dropdown's target element.\n * @slot - Renders the dropdown list items.\n *\n * @csspart base - The dropdown list wrapper container.\n * @csspart list - The dropdown list element.\n */\n@themes(all)\n@blazorAdditionalDependencies(\n  'IgcDropdownItemComponent, IgcDropdownHeaderComponent, IgcDropdownGroupComponent'\n)\nexport default class IgcDropdownComponent extends SizableMixin(\n  EventEmitterMixin<\n    IgcDropdownEventMap,\n    AbstractConstructor<IgcBaseComboBoxLikeComponent>\n  >(IgcBaseComboBoxLikeComponent)\n) {\n  public static readonly tagName = 'igc-dropdown';\n  public static styles = [styles, shared];\n\n  /* blazorSuppress */\n  public static register() {\n    registerComponent(\n      IgcDropdownComponent,\n      IgcDropdownGroupComponent,\n      IgcDropdownHeaderComponent,\n      IgcDropdownItemComponent,\n      IgcPopoverComponent\n    );\n  }\n\n  private _keyBindings: ReturnType<typeof addKeybindings>;\n\n  private _rootScrollController = addRootScrollHandler(this, {\n    hideCallback: () => this._hide(true),\n  });\n\n  private _rootClickController = addRootClickHandler(this, {\n    hideCallback: () => this._hide(true),\n  });\n\n  @state()\n  protected _selectedItem: IgcDropdownItemComponent | null = null;\n\n  @state()\n  protected _activeItem!: IgcDropdownItemComponent;\n\n  private get _activeItems() {\n    return Array.from(\n      getActiveItems<IgcDropdownItemComponent>(\n        this,\n        IgcDropdownItemComponent.tagName\n      )\n    );\n  }\n\n  private _targetListeners!: KeyBindingObserverCleanup;\n\n  @state()\n  private _target?: HTMLElement;\n\n  @query('slot[name=\"target\"]', true)\n  protected trigger!: HTMLSlotElement;\n\n  /** The preferred placement of the component around the target element.\n   * @type {'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'right' | 'right-start' | 'right-end' | 'left' | 'left-start' | 'left-end'}\n   * @attr\n   */\n  @property()\n  public placement: IgcPlacement = 'bottom-start';\n\n  /**\n   * Sets the component's positioning strategy.\n   * @attr position-strategy\n   *\n   * @deprecated since v4.9.0. Stacking context is now handled through the popover API.\n   */\n  @property({ attribute: 'position-strategy' })\n  public positionStrategy: 'absolute' | 'fixed' = 'absolute';\n\n  /**\n   * Determines the behavior of the component during scrolling of the parent container.\n   * @attr scroll-strategy\n   */\n  @property({ attribute: 'scroll-strategy' })\n  public scrollStrategy: 'scroll' | 'block' | 'close' = 'scroll';\n\n  /**\n   * Whether the component should be flipped to the opposite side of the target once it's about to overflow the visible area.\n   * When true, once enough space is detected on its preferred side, it will flip back.\n   * @attr\n   */\n  @property({ type: Boolean })\n  public flip = false;\n\n  /**\n   * The distance from the target element.\n   * @attr\n   */\n  @property({ type: Number })\n  public distance = 0;\n\n  /**\n   * Whether the dropdown's width should be the same as the target's one.\n   * @attr same-width\n   */\n  @property({ type: Boolean, attribute: 'same-width' })\n  public sameWidth = false;\n\n  /** Returns the items of the dropdown. */\n  public get items() {\n    return Array.from(\n      getItems<IgcDropdownItemComponent>(this, IgcDropdownItemComponent.tagName)\n    );\n  }\n\n  /** Returns the group items of the dropdown. */\n  public get groups() {\n    return Array.from(\n      getItems<IgcDropdownGroupComponent>(\n        this,\n        IgcDropdownGroupComponent.tagName\n      )\n    );\n  }\n\n  /** Returns the selected item from the dropdown or null. */\n  public get selectedItem() {\n    return this._selectedItem;\n  }\n\n  @watch('scrollStrategy', { waitUntilFirstUpdate: true })\n  protected scrollStrategyChanged() {\n    this._rootScrollController.update({ resetListeners: true });\n  }\n\n  @watch('open', { waitUntilFirstUpdate: true })\n  @watch('keepOpenOnOutsideClick', { waitUntilFirstUpdate: true })\n  protected openStateChange() {\n    this._updateAnchorAccessibility(this._target);\n    this._rootClickController.update();\n    this._rootScrollController.update();\n\n    if (!this.open) {\n      this._target = undefined;\n      this._targetListeners?.unsubscribe();\n      this._rootClickController.update({ target: undefined });\n    }\n  }\n\n  constructor() {\n    super();\n\n    this._keyBindings = addKeybindings(this, {\n      skip: () => !this.open,\n      bindingDefaults: { preventDefault: true, triggers: ['keydownRepeat'] },\n    })\n      .set(tabKey, this.onTabKey, {\n        preventDefault: false,\n      })\n      .set(escapeKey, this.onEscapeKey)\n      .set(arrowUp, this.onArrowUp)\n      .set(arrowLeft, this.onArrowUp)\n      .set(arrowDown, this.onArrowDown)\n      .set(arrowRight, this.onArrowDown)\n      .set(enterKey, this.onEnterKey)\n      .set(homeKey, this.onHomeKey)\n      .set(endKey, this.onEndKey);\n\n    this.size = 'medium';\n  }\n\n  protected override async firstUpdated() {\n    await this.updateComplete;\n    const selected = setInitialSelectionState(this.items);\n    if (selected) {\n      this._selectItem(selected, false);\n    }\n  }\n\n  public override disconnectedCallback() {\n    this._targetListeners?.unsubscribe();\n    super.disconnectedCallback();\n  }\n\n  private handleListBoxClick(event: MouseEvent) {\n    const item = findElementFromEventPath<IgcDropdownItemComponent>(\n      IgcDropdownItemComponent.tagName,\n      event\n    );\n    if (item && this._activeItems.includes(item)) {\n      this._selectItem(item);\n    }\n  }\n\n  private handleChange(item: IgcDropdownItemComponent) {\n    this.emitEvent('igcChange', { detail: item });\n  }\n\n  private handleSlotChange() {\n    this._updateAnchorAccessibility();\n  }\n\n  private onArrowUp() {\n    this._navigateToActiveItem(\n      getPreviousActiveItem(this.items, this._activeItem)\n    );\n  }\n\n  private onArrowDown() {\n    this._navigateToActiveItem(getNextActiveItem(this.items, this._activeItem));\n  }\n\n  protected onHomeKey() {\n    this._navigateToActiveItem(this._activeItems.at(0));\n  }\n\n  protected onEndKey() {\n    this._navigateToActiveItem(this._activeItems.at(-1));\n  }\n\n  protected onTabKey() {\n    if (this._activeItem) {\n      this._selectItem(this._activeItem);\n    }\n    if (this.open) {\n      this._hide(true);\n    }\n  }\n\n  protected onEscapeKey() {\n    this._hide(true);\n  }\n\n  protected onEnterKey() {\n    this._selectItem(this._activeItem);\n  }\n\n  private activateItem(item: IgcDropdownItemComponent) {\n    if (this._activeItem) {\n      this._activeItem.active = false;\n    }\n\n    this._activeItem = item;\n    this._activeItem.active = true;\n  }\n\n  private _navigateToActiveItem(item?: IgcDropdownItemComponent) {\n    if (item) {\n      this.activateItem(item);\n      item.scrollIntoView({ behavior: 'auto', block: 'nearest' });\n    }\n  }\n\n  private _selectItem(item: IgcDropdownItemComponent, emit = true) {\n    if (this._selectedItem) {\n      this._selectedItem.selected = false;\n    }\n\n    this.activateItem(item);\n    this._selectedItem = item;\n    this._selectedItem.selected = true;\n\n    if (emit) this.handleChange(this._selectedItem);\n    if (emit && !this.keepOpenOnSelect) this._hide(true);\n\n    return this._selectedItem;\n  }\n\n  private _updateAnchorAccessibility(anchor?: HTMLElement | null) {\n    const target =\n      anchor ?? this.trigger.assignedElements({ flatten: true }).at(0);\n\n    // Find tabbable elements ?\n    if (target) {\n      target.setAttribute('aria-haspopup', 'true');\n      target.setAttribute('aria-expanded', this.open ? 'true' : 'false');\n    }\n  }\n\n  private getItem(value: string) {\n    return this.items.find((item) => item.value === value);\n  }\n\n  private _setTarget(anchor: HTMLElement | string) {\n    const target =\n      typeof anchor === 'string'\n        ? (getElementByIdFromRoot(this, anchor) as HTMLElement)\n        : anchor;\n\n    this._target = target;\n    this._targetListeners = this._keyBindings.observeElement(target);\n    this._rootClickController.update({ target });\n  }\n\n  /* blazorSuppress */\n  /** Shows the component. */\n  public override show(target?: HTMLElement | string) {\n    if (target) {\n      this._setTarget(target);\n    }\n    super.show();\n  }\n\n  /* blazorSuppress */\n  /** Toggles the open state of the component. */\n  public override toggle(target?: HTMLElement | string) {\n    this.open ? this.hide() : this.show(target);\n  }\n\n  /** Navigates to the item with the specified value. If it exists, returns the found item, otherwise - null. */\n  public navigateTo(value: string): IgcDropdownItemComponent | null;\n  /** Navigates to the item at the specified index. If it exists, returns the found item, otherwise - null. */\n  public navigateTo(index: number): IgcDropdownItemComponent | null;\n  /** Navigates to the specified item. If it exists, returns the found item, otherwise - null. */\n  @blazorSuppress()\n  public navigateTo(value: string | number): IgcDropdownItemComponent | null {\n    const item =\n      typeof value === 'string' ? this.getItem(value) : this.items[value];\n\n    if (item) {\n      this._navigateToActiveItem(item);\n    }\n\n    return item ?? null;\n  }\n\n  /** Selects the item with the specified value. If it exists, returns the found item, otherwise - null. */\n  public select(value: string): IgcDropdownItemComponent | null;\n  /** Selects the item at the specified index. If it exists, returns the found item, otherwise - null. */\n  public select(index: number): IgcDropdownItemComponent | null;\n  /** Selects the specified item. If it exists, returns the found item, otherwise - null. */\n  @blazorSuppress()\n  public select(value: string | number): IgcDropdownItemComponent | null {\n    const item =\n      typeof value === 'string' ? this.getItem(value) : this.items[value];\n    return item ? this._selectItem(item, false) : null;\n  }\n\n  /**  Clears the current selection of the dropdown. */\n  public clearSelection() {\n    if (this._selectedItem) {\n      this._selectedItem.selected = false;\n    }\n    this._selectedItem = null;\n  }\n\n  protected override render() {\n    return html`<igc-popover\n      ?open=${this.open}\n      ?flip=${this.flip}\n      ?same-width=${this.sameWidth}\n      .anchor=${this._target}\n      .offset=${this.distance}\n      .placement=${this.placement}\n      shift\n    >\n      <slot\n        id=\"dropdown-target\"\n        name=\"target\"\n        slot=\"anchor\"\n        @click=${this.handleAnchorClick}\n        @slotchange=${this.handleSlotChange}\n      ></slot>\n      <div part=\"base\" @click=${this.handleListBoxClick} .inert=${!this.open}>\n        <div\n          id=\"dropdown-list\"\n          role=\"listbox\"\n          part=\"list\"\n          aria-labelledby=\"dropdown-target\"\n        >\n          <slot></slot>\n        </div>\n      </div>\n    </igc-popover>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-dropdown': IgcDropdownComponent;\n  }\n}\n"]}