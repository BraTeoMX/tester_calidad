var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var IgcButtonComponent_1;
import { html } from 'lit';
import { property } from 'lit/decorators.js';
import { themes } from '../../theming/theming-decorator.js';
import { registerComponent } from '../common/definitions/register.js';
import { IgcButtonBaseComponent } from './button-base.js';
import { styles } from './themes/button/button.base.css.js';
import { styles as shared } from './themes/button/shared/button.common.css.js';
import { all } from './themes/button/themes.js';
let IgcButtonComponent = IgcButtonComponent_1 = class IgcButtonComponent extends IgcButtonBaseComponent {
    static register() {
        registerComponent(IgcButtonComponent_1);
    }
    constructor() {
        super();
        this.variant = 'contained';
        this.size = 'medium';
    }
    renderContent() {
        return html `
      <slot name="prefix"></slot>
      <slot></slot>
      <slot name="suffix"></slot>
    `;
    }
};
IgcButtonComponent.tagName = 'igc-button';
IgcButtonComponent.styles = [styles, shared];
__decorate([
    property({ reflect: true })
], IgcButtonComponent.prototype, "variant", void 0);
IgcButtonComponent = IgcButtonComponent_1 = __decorate([
    themes(all)
], IgcButtonComponent);
export default IgcButtonComponent;
//# sourceMappingURL=button.js.map