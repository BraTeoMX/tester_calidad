var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var IgcToastComponent_1;
import { html } from 'lit';
import { addAnimationController } from '../../animations/player.js';
import { themes } from '../../theming/theming-decorator.js';
import { registerComponent } from '../common/definitions/register.js';
import { IgcBaseAlertLikeComponent } from '../common/mixins/alert.js';
import { styles as shared } from './themes/shared/toast.common.css.js';
import { all } from './themes/themes.js';
import { styles } from './themes/toast.base.css.js';
let IgcToastComponent = IgcToastComponent_1 = class IgcToastComponent extends IgcBaseAlertLikeComponent {
    constructor() {
        super(...arguments);
        this._animationPlayer = addAnimationController(this);
    }
    static register() {
        registerComponent(IgcToastComponent_1);
    }
    render() {
        return html `<slot .inert=${!this.open}></slot>`;
    }
};
IgcToastComponent.tagName = 'igc-toast';
IgcToastComponent.styles = [styles, shared];
IgcToastComponent = IgcToastComponent_1 = __decorate([
    themes(all)
], IgcToastComponent);
export default IgcToastComponent;
//# sourceMappingURL=toast.js.map