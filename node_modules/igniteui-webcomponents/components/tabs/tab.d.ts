import { LitElement } from 'lit';
/**
 * Represents the tab header.
 *
 * @element igc-tab
 *
 * @slot prefix - Renders before the tab header content.
 * @slot - Renders the tab header content.
 * @slot suffix - Renders after the tab header content.
 *
 * @csspart content - The content wrapper.
 * @csspart prefix - The prefix wrapper.
 * @csspart suffix - The suffix wrapper.
 */
export default class IgcTabComponent extends LitElement {
    static readonly tagName = "igc-tab";
    static styles: import("lit").CSSResult[];
    static register(): void;
    private static readonly increment;
    private tab;
    /**
     * The id of the tab panel which will be controlled by the tab.
     * @attr
     */
    panel: string;
    /**
     * Determines whether the tab is selected.
     * @attr
     */
    selected: boolean;
    /**
     * Determines whether the tab is disabled.
     * @attr
     */
    disabled: boolean;
    connectedCallback(): void;
    /** Sets focus to the tab. */
    focus(options?: FocusOptions): void;
    /** Removes focus from the tab. */
    blur(): void;
    protected render(): import("lit-html").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'igc-tab': IgcTabComponent;
    }
}
