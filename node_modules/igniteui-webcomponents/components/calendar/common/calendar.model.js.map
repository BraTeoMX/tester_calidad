{"version":3,"file":"calendar.model.js","sourceRoot":"","sources":["../../../../src/components/calendar/common/calendar.model.ts"],"names":[],"mappings":"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","sourcesContent":["/* creationType: DateRangeDescriptor */\nexport interface DateRangeDescriptor {\n  type: DateRangeType;\n  dateRange?: Date[];\n}\n\nexport enum DateRangeType {\n  After = 0,\n  Before = 1,\n  Between = 2,\n  Specific = 3,\n  Weekdays = 4,\n  Weekends = 5,\n}\n\n/**\n * @hidden\n */\nexport enum TimeDeltaInterval {\n  Second = 0,\n  Minute = 1,\n  Hour = 2,\n  Day = 3,\n  Week = 4,\n  Month = 5,\n  Quarter = 6,\n  Year = 7,\n}\n\nconst MDAYS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst FEBRUARY = 1;\n\nexport const range = (start: number, stop: number, step = 1) => {\n  const res = [];\n  const beginning = start ?? 0;\n  const cur = stop === undefined ? 0 : beginning;\n  const max = stop === undefined ? beginning : stop;\n  for (let i = cur; step < 0 ? i > max : i < max; i += step) {\n    res.push(i);\n  }\n  return res;\n};\n\n/**\n * Returns true for leap years, false for non-leap years.\n *\n * @export\n * @param year\n * @returns\n */\nexport const isLeap = (year: number): boolean =>\n  year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n\nexport const weekDay = (year: number, month: number, day: number): number =>\n  new Date(year, month, day).getDay();\n\n/**\n * Return weekday and number of days for year, month.\n *\n * @export\n * @param year\n * @param month\n * @returns\n */\nexport const monthRange = (year: number, month: number): number[] => {\n  if (month < 0 || month > 11) {\n    throw new Error('Invalid month specified');\n  }\n  const day = weekDay(year, month, 1);\n  let nDays = MDAYS[month];\n  if (month === FEBRUARY && isLeap(year)) {\n    nDays++;\n  }\n  return [day, nDays];\n};\n\nexport const isDateInRanges = (\n  date: Date,\n  ranges: DateRangeDescriptor[]\n): boolean => {\n  const searchedDate = new Date(\n    date.getFullYear(),\n    date.getMonth(),\n    date.getDate()\n  );\n  const searchedDateInMs = searchedDate.getTime();\n\n  if (!ranges) {\n    return false;\n  }\n\n  for (const descriptor of ranges) {\n    const dRanges: Date[] = descriptor.dateRange\n      ? descriptor.dateRange.map(\n          (r) => new Date(r.getFullYear(), r.getMonth(), r.getDate())\n        )\n      : [];\n    switch (descriptor.type) {\n      case DateRangeType.After:\n        if (searchedDateInMs > dRanges[0].getTime()) {\n          return true;\n        }\n\n        break;\n      case DateRangeType.Before:\n        if (searchedDateInMs < dRanges[0].getTime()) {\n          return true;\n        }\n\n        break;\n      case DateRangeType.Between: {\n        const dRange = dRanges.map((d) => d.getTime());\n        const min = Math.min(dRange[0], dRange[1]);\n        const max = Math.max(dRange[0], dRange[1]);\n        if (searchedDateInMs >= min && searchedDateInMs <= max) {\n          return true;\n        }\n\n        break;\n      }\n      case DateRangeType.Specific: {\n        const datesInMs = dRanges.map((d) => d.getTime());\n        for (const specificDateInMs of datesInMs) {\n          if (searchedDateInMs === specificDateInMs) {\n            return true;\n          }\n        }\n\n        break;\n      }\n      case DateRangeType.Weekdays: {\n        const day = searchedDate.getDay();\n        if (day % 6 !== 0) {\n          return true;\n        }\n\n        break;\n      }\n      case DateRangeType.Weekends: {\n        const weekday = searchedDate.getDay();\n        if (weekday % 6 === 0) {\n          return true;\n        }\n\n        break;\n      }\n      default:\n        return false;\n    }\n  }\n\n  return false;\n};\n\n/* blazorSuppress */\nexport interface ICalendarDate {\n  date: Date;\n  isCurrentMonth: boolean;\n  isPrevMonth: boolean;\n  isNextMonth: boolean;\n}\n\nexport interface IFormattedParts {\n  value: string;\n  literal?: string;\n  combined: string;\n}\n\nexport interface IFormattingViews {\n  day?: boolean;\n  month?: boolean;\n  year?: boolean;\n}\n\nexport type WeekDays =\n  | 'sunday'\n  | 'monday'\n  | 'tuesday'\n  | 'wednesday'\n  | 'thursday'\n  | 'friday'\n  | 'saturday';\n\nexport enum WEEKDAYS {\n  SUNDAY = 0,\n  MONDAY = 1,\n  TUESDAY = 2,\n  WEDNESDAY = 3,\n  THURSDAY = 4,\n  FRIDAY = 5,\n  SATURDAY = 6,\n}\n\nexport class Calendar {\n  private _firstWeekDay: number | WEEKDAYS;\n\n  constructor(firstWeekDay: number | WEEKDAYS = WEEKDAYS.SUNDAY) {\n    this._firstWeekDay = firstWeekDay;\n  }\n\n  /** Gets the starting day of the week. */\n  public get firstWeekDay(): number {\n    return this._firstWeekDay % 7;\n  }\n\n  /** Sets the starting day of the week. */\n  public set firstWeekDay(value: number) {\n    this._firstWeekDay = value;\n  }\n\n  /**\n   * Returns an array of weekdays for one week starting\n   * with the currently set `firstWeekDay`\n   *\n   * this.firstWeekDay = 0 (Sunday) --> [0, 1, 2, 3, 4, 5, 6]\n   * this.firstWeekDay = 1 (Monday) --> [1, 2, 3, 4, 5, 6, 0]\n   *\n   * @returns\n   *\n   * @memberof Calendar\n   */\n  public weekdays(): number[] {\n    const res = [];\n    for (const i of range(this.firstWeekDay, this.firstWeekDay + 7)) {\n      res.push(i % 7);\n    }\n    return res;\n  }\n\n  /**\n   * Returns the date values for one month. It will always iterate throught\n   * complete weeks, so it will contain dates outside the specified month.\n   *\n   * @param year\n   * @param month\n   * @param boolean\n   * @returns\n   *\n   * @memberof Calendar\n   */\n  public monthdates(\n    year: number,\n    month: number,\n    extraWeek = false\n  ): ICalendarDate[] {\n    let date = new Date(year, month, 1);\n    let days = (date.getDay() - this.firstWeekDay) % 7;\n    if (days < 0) {\n      days = 7 - Math.abs(days);\n    }\n    date = this.timedelta(date, TimeDeltaInterval.Day, -days);\n    const res = [];\n    let value: ICalendarDate;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      value = this.generateICalendarDate(date, year, month);\n      res.push(value);\n\n      date = this.timedelta(date, TimeDeltaInterval.Day, 1);\n\n      if (date.getMonth() !== month && date.getDay() === this.firstWeekDay) {\n        if (extraWeek && res.length <= 35) {\n          for (const _ of range(0, 7)) {\n            value = this.generateICalendarDate(date, year, month);\n            res.push(value);\n            date = this.timedelta(date, TimeDeltaInterval.Day, 1);\n          }\n        }\n        break;\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Returns a matrix (array of arrays) representing a month's calendar.\n   * Each row represents a full week; week entries are ICalendarDate objects.\n   *\n   * @param year\n   * @param month\n   * @returns\n   *\n   * @memberof Calendar\n   */\n  public monthdatescalendar(\n    year: number,\n    month: number,\n    extraWeek = false\n  ): ICalendarDate[][] {\n    const dates = this.monthdates(year, month, extraWeek);\n    const res = [];\n    for (const i of range(0, dates.length, 7)) {\n      res.push(dates.slice(i, i + 7));\n    }\n    return res;\n  }\n\n  public timedelta(\n    date: Date,\n    interval: TimeDeltaInterval,\n    units: number\n  ): Date {\n    const ret = new Date(date);\n\n    const checkRollover = () => {\n      if (ret.getDate() !== date.getDate()) {\n        ret.setDate(0);\n      }\n    };\n\n    switch (interval) {\n      case TimeDeltaInterval.Year:\n        ret.setFullYear(ret.getFullYear() + units);\n        checkRollover();\n        break;\n      case TimeDeltaInterval.Quarter:\n        ret.setMonth(ret.getMonth() + 3 * units);\n        checkRollover();\n        break;\n      case TimeDeltaInterval.Month:\n        ret.setMonth(ret.getMonth() + units);\n        checkRollover();\n        break;\n      case TimeDeltaInterval.Week:\n        ret.setDate(ret.getDate() + 7 * units);\n        break;\n      case TimeDeltaInterval.Day:\n        ret.setDate(ret.getDate() + units);\n        break;\n      case TimeDeltaInterval.Hour:\n        ret.setTime(ret.getTime() + units * 3600000);\n        break;\n      case TimeDeltaInterval.Minute:\n        ret.setTime(ret.getTime() + units * 60000);\n        break;\n      case TimeDeltaInterval.Second:\n        ret.setTime(ret.getTime() + units * 1000);\n        break;\n      default:\n        throw new Error('Invalid interval specifier');\n    }\n    return ret;\n  }\n\n  /** Gets the same date the month after. */\n  public getNextMonth(date: Date) {\n    return this.timedelta(date, TimeDeltaInterval.Month, 1);\n  }\n\n  /** Gets the same date the month prior. */\n  public getPrevMonth(date: Date) {\n    return this.timedelta(date, TimeDeltaInterval.Month, -1);\n  }\n\n  /** Gets the same date the year after. */\n  public getNextYear(date: Date) {\n    return this.timedelta(date, TimeDeltaInterval.Year, 1);\n  }\n\n  /** Gets the same date the year prior. */\n  public getPrevYear(date: Date) {\n    return this.timedelta(date, TimeDeltaInterval.Year, -1);\n  }\n\n  /** Gets the week number of a given date. */\n  public getWeekNumber(date: Date) {\n    const firstJan = new Date(date.getFullYear(), 0, 1).getTime();\n    const today = new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate()\n    ).getTime();\n    const dayInMilSeconds = 86400000;\n    const dayOfYear = (today - firstJan + 1) / dayInMilSeconds;\n    return Math.ceil(dayOfYear / 7);\n  }\n\n  private generateICalendarDate(\n    date: Date,\n    year: number,\n    month: number\n  ): ICalendarDate {\n    return {\n      date,\n      isCurrentMonth: date.getFullYear() === year && date.getMonth() === month,\n      isNextMonth: this.isNextMonth(date, year, month),\n      isPrevMonth: this.isPreviousMonth(date, year, month),\n    };\n  }\n\n  private isPreviousMonth(date: Date, year: number, month: number): boolean {\n    if (date.getFullYear() === year) {\n      return date.getMonth() < month;\n    }\n    return date.getFullYear() < year;\n  }\n\n  private isNextMonth(date: Date, year: number, month: number): boolean {\n    if (date.getFullYear() === year) {\n      return date.getMonth() > month;\n    }\n\n    return date.getFullYear() > year;\n  }\n}\n"]}