import { LitElement } from 'lit';
import type { Constructor } from '../../common/mixins/constructor.js';
import { type IgcCalendarBaseEventMap } from '../common/calendar-base.js';
declare const IgcMonthsViewComponent_base: Constructor<import("../../common/mixins/event-emitter.js").EventEmitterInterface<IgcCalendarBaseEventMap>> & Constructor<LitElement>;
/**
 * Instantiate a months view as a separate component in the calendar.
 *
 * @element igc-months-view
 *
 * @csspart months-row - The months row container.
 * @csspart month - The month container.
 * @csspart month-inner - The inner month container.
 */
export default class IgcMonthsViewComponent extends IgcMonthsViewComponent_base {
    static readonly tagName = "igc-months-view";
    static styles: import("lit").CSSResult;
    static register(): void;
    private calendarModel;
    private monthFormatter;
    private activeMonth;
    /** Ð¢he current value of the calendar. */
    value: Date;
    /** Sets the locale used for formatting and displaying the dates. */
    locale: string;
    /** The format of the month. Defaults to long. */
    monthFormat: 'numeric' | '2-digit' | 'long' | 'short' | 'narrow' | undefined;
    protected formatChange(): void;
    constructor();
    /** Focuses the active date. */
    focusActiveDate(): void;
    private initMonthFormatter;
    private formattedMonth;
    private get months();
    private resolveMonthPartName;
    private selectMonth;
    private monthKeyDown;
    protected render(): import("lit-html").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'igc-months-view': IgcMonthsViewComponent;
    }
}
export {};
