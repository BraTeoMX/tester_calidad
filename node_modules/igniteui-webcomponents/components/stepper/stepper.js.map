{"version":3,"file":"stepper.js","sourceRoot":"","sources":["../../../src/components/stepper/stepper.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html } from 'lit';\nimport { property, queryAssignedElements } from 'lit/decorators.js';\n\nimport { themes } from '../../theming/theming-decorator.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { registerComponent } from '../common/definitions/register.js';\nimport type { Constructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { isLTR } from '../common/util.js';\nimport IgcStepComponent from './step.js';\nimport type { IgcStepperEventMap } from './stepper.common.js';\nimport { styles } from './themes/stepper/stepper.base.css.js';\nimport { styles as bootstrap } from './themes/stepper/stepper.bootstrap.css.js';\nimport { styles as fluent } from './themes/stepper/stepper.fluent.css.js';\nimport { styles as indigo } from './themes/stepper/stepper.indigo.css.js';\n\n/**\n * IgxStepper provides a wizard-like workflow by dividing content into logical steps.\n *\n * @remarks\n * The stepper component allows the user to navigate between multiple steps.\n * It supports horizontal and vertical orientation as well as keyboard navigation and provides API methods to control the active step.\n *\n * @element igc-stepper\n *\n * @slot - Renders the step components inside default slot.\n *\n * @fires igcActiveStepChanging - Emitted when the active step is about to change.\n * @fires igcActiveStepChanged - Emitted when the active step is changed.\n */\n@themes({\n  light: { bootstrap, fluent, indigo },\n  dark: { bootstrap, fluent, indigo },\n})\nexport default class IgcStepperComponent extends EventEmitterMixin<\n  IgcStepperEventMap,\n  Constructor<LitElement>\n>(LitElement) {\n  public static readonly tagName = 'igc-stepper';\n  protected static styles = styles;\n\n  /* blazorSuppress */\n  public static register() {\n    registerComponent(IgcStepperComponent, IgcStepComponent);\n  }\n\n  // biome-ignore lint/complexity/noBannedTypes: No easy fix as the callback shapes are wildly different\n  private readonly keyDownHandlers: Map<string, Function> = new Map(\n    Object.entries({\n      Enter: this.activateStep,\n      Space: this.activateStep,\n      SpaceBar: this.activateStep,\n      ' ': this.activateStep,\n      ArrowUp: this.onArrowUpKeyDown,\n      ArrowDown: this.onArrowDownKeyDown,\n      ArrowLeft: this.onArrowLeftKeyDown,\n      ArrowRight: this.onArrowRightKeyDown,\n      Home: this.onHomeKey,\n      End: this.onEndKey,\n    })\n  );\n\n  private activeStep!: IgcStepComponent;\n\n  /** Returns all of the stepper's steps. */\n  @queryAssignedElements({ selector: 'igc-step' })\n  public steps!: Array<IgcStepComponent>;\n\n  /** Gets/Sets the orientation of the stepper.\n   *\n   * @remarks\n   * Default value is `horizontal`.\n   */\n  @property({ reflect: true })\n  public orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n  /** Get/Set the type of the steps.\n   *\n   * @remarks\n   * Default value is `full`.\n   */\n  @property({ reflect: true, attribute: 'step-type' })\n  public stepType: 'indicator' | 'title' | 'full' = 'full';\n\n  /**\n   * Get/Set whether the stepper is linear.\n   *\n   * @remarks\n   * If the stepper is in linear mode and if the active step is valid only then the user is able to move forward.\n   */\n  @property({ type: Boolean })\n  public linear = false;\n\n  /**\n   * Get/Set whether the content is displayed above the steps.\n   *\n   * @remarks\n   * Default value is `false` and the content is below the steps.\n   */\n  @property({ reflect: true, type: Boolean, attribute: 'content-top' })\n  public contentTop = false;\n\n  /**\n   * The animation type when in vertical mode.\n   * @attr vertical-animation\n   */\n  @property({ attribute: 'vertical-animation' })\n  public verticalAnimation: 'grow' | 'fade' | 'none' = 'grow';\n\n  /**\n   * The animation type when in horizontal mode.\n   * @attr horizontal-animation\n   */\n  @property({ attribute: 'horizontal-animation' })\n  public horizontalAnimation: 'slide' | 'fade' | 'none' = 'slide';\n\n  /**\n   * The animation duration in either vertical or horizontal mode.\n   * @attr animation-duration\n   */\n  @property({ attribute: 'animation-duration', type: Number })\n  public animationDuration = 320;\n\n  /**\n   * Get/Set the position of the steps title.\n   *\n   * @remarks\n   * The default value is undefined.\n   * When the stepper is horizontally orientated the title is positioned below the indicator.\n   * When the stepper is horizontally orientated the title is positioned on the right side of the indicator.\n   */\n  @property({ reflect: false, attribute: 'title-position' })\n  public titlePosition?: 'bottom' | 'top' | 'end' | 'start';\n\n  @watch('orientation', { waitUntilFirstUpdate: true })\n  protected orientationChange(): void {\n    this.setAttribute('aria-orientation', this.orientation);\n    this.steps.forEach((step: IgcStepComponent) => {\n      step.orientation = this.orientation;\n      this.updateAnimation(step);\n    });\n  }\n\n  @watch('stepType', { waitUntilFirstUpdate: true })\n  protected stepTypeChange(): void {\n    this.steps.forEach((step: IgcStepComponent) => {\n      step.stepType = this.stepType;\n    });\n  }\n\n  @watch('titlePosition', { waitUntilFirstUpdate: true })\n  protected titlePositionChange(): void {\n    this.steps.forEach((step: IgcStepComponent) => {\n      if (\n        this.titlePosition !== 'bottom' &&\n        this.titlePosition !== 'top' &&\n        this.titlePosition !== 'end' &&\n        this.titlePosition !== 'start'\n      ) {\n        step.titlePosition = undefined;\n      } else {\n        step.titlePosition = this.titlePosition;\n      }\n    });\n  }\n\n  @watch('contentTop', { waitUntilFirstUpdate: true })\n  protected contentTopChange(): void {\n    this.steps.forEach((step: IgcStepComponent) => {\n      step.contentTop = this.contentTop;\n    });\n  }\n\n  @watch('linear', { waitUntilFirstUpdate: true })\n  protected linearChange(): void {\n    this.steps.forEach((step: IgcStepComponent) => {\n      step.linearDisabled = this.linear;\n      if (step.index <= this.activeStep.index) {\n        step.visited = true;\n      } else {\n        step.visited = false;\n      }\n    });\n    if (this.linear) {\n      this.updateStepsLinearDisabled();\n    }\n  }\n\n  @watch('verticalAnimation', { waitUntilFirstUpdate: true })\n  @watch('horizontalAnimation', { waitUntilFirstUpdate: true })\n  protected animationTypeChange() {\n    this.steps.forEach((step: IgcStepComponent) => {\n      this.updateAnimation(step);\n    });\n  }\n\n  @watch('animationDuration', { waitUntilFirstUpdate: true })\n  protected animationDurationChange() {\n    this.steps.forEach((step: IgcStepComponent) => {\n      step.animationDuration = this.animationDuration;\n    });\n  }\n\n  constructor() {\n    super();\n\n    this.addEventListener('stepActiveChanged', (event: any) => {\n      event.stopPropagation();\n      this.activateStep(event.target, event.detail);\n    });\n\n    this.addEventListener('stepDisabledInvalidChanged', (event: any) => {\n      event.stopPropagation();\n      if (this.linear) {\n        this.updateStepsLinearDisabled();\n      }\n    });\n\n    this.addEventListener('stepCompleteChanged', (event: any) => {\n      event.stopPropagation();\n      const nextStep = this.steps[event.target.index + 1];\n      if (nextStep) {\n        nextStep.previousComplete = event.target.complete;\n      }\n    });\n\n    this.addEventListener('stepHeaderKeydown', (event: any) => {\n      event.stopPropagation();\n      this.handleKeydown(event.detail.event, event.detail.focusedStep);\n    });\n  }\n\n  public override connectedCallback(): void {\n    super.connectedCallback();\n    this.setAttribute('role', 'tablist');\n    this.setAttribute('aria-orientation', this.orientation);\n  }\n\n  private activateFirstStep() {\n    const firstEnabledStep = this.steps.find(\n      (s: IgcStepComponent) => !s.disabled\n    );\n    if (firstEnabledStep) {\n      this.activateStep(firstEnabledStep, false);\n    }\n  }\n\n  private animateSteps(\n    nextStep: IgcStepComponent,\n    currentStep: IgcStepComponent\n  ) {\n    if (nextStep.index > currentStep.index) {\n      // Animate steps in ascending/next direction\n      currentStep.toggleAnimation('out');\n      nextStep.toggleAnimation('in');\n    } else {\n      // Animate steps in descending/previous direction\n      currentStep.toggleAnimation('in', 'reverse');\n      nextStep.toggleAnimation('out', 'reverse');\n    }\n  }\n\n  private async activateStep(step: IgcStepComponent, shouldEmit = true) {\n    if (step === this.activeStep) {\n      return;\n    }\n\n    if (shouldEmit) {\n      const args = {\n        detail: {\n          owner: this,\n          oldIndex: this.activeStep.index,\n          newIndex: step.index,\n        },\n        cancelable: true,\n      };\n\n      this.animateSteps(step, this.activeStep);\n\n      const allowed = this.emitEvent('igcActiveStepChanging', args);\n\n      if (!allowed) {\n        return;\n      }\n      this.changeActiveStep(step);\n      this.emitEvent('igcActiveStepChanged', {\n        detail: { owner: this, index: step.index },\n      });\n    } else {\n      this.changeActiveStep(step);\n    }\n  }\n\n  private changeActiveStep(step: IgcStepComponent) {\n    if (this.activeStep) {\n      this.activeStep.active = false;\n    }\n    step.active = true;\n    step.visited = true;\n    this.activeStep = step;\n  }\n\n  private moveToNextStep(next = true) {\n    let steps = this.steps;\n    let activeStepIndex = this.activeStep.index;\n    if (!next) {\n      steps = this.steps.reverse();\n      activeStepIndex = steps.findIndex(\n        (step: IgcStepComponent) => step === this.activeStep\n      );\n    }\n\n    const nextStep = steps.find(\n      (step: IgcStepComponent, i: number) =>\n        i > activeStepIndex && step.isAccessible\n    );\n\n    if (nextStep) {\n      this.animateSteps(nextStep, this.activeStep);\n      this.activateStep(nextStep, false);\n    }\n  }\n\n  private handleKeydown(event: KeyboardEvent, focusedStep: IgcStepComponent) {\n    const key = event.key.toLowerCase();\n\n    if (this.keyDownHandlers.has(event.key)) {\n      event.preventDefault();\n      this.keyDownHandlers.get(event.key)?.call(this, focusedStep);\n    }\n    if (key === 'tab' && this.orientation === 'vertical') {\n      return;\n    }\n    if (key === 'tab' && this.activeStep.index !== focusedStep.index) {\n      this.activeStep.header.focus();\n    }\n  }\n\n  private onHomeKey() {\n    this.steps\n      .filter((step: IgcStepComponent) => step.isAccessible)[0]\n      ?.header?.focus();\n  }\n\n  private onEndKey() {\n    this.steps\n      .filter((step: IgcStepComponent) => step.isAccessible)\n      .pop()\n      ?.header?.focus();\n  }\n\n  private onArrowDownKeyDown(focusedStep: IgcStepComponent) {\n    if (this.orientation === 'horizontal') {\n      return;\n    }\n    this.getNextStep(focusedStep)?.header?.focus();\n  }\n\n  private onArrowUpKeyDown(focusedStep: IgcStepComponent) {\n    if (this.orientation === 'horizontal') {\n      return;\n    }\n    this.getPreviousStep(focusedStep)?.header?.focus();\n  }\n\n  private onArrowRightKeyDown(focusedStep: IgcStepComponent) {\n    if (!isLTR(this) && this.orientation === 'horizontal') {\n      this.getPreviousStep(focusedStep)?.header?.focus();\n    } else {\n      this.getNextStep(focusedStep)?.header?.focus();\n    }\n  }\n\n  private onArrowLeftKeyDown(focusedStep: IgcStepComponent) {\n    if (!isLTR(this) && this.orientation === 'horizontal') {\n      this.getNextStep(focusedStep)?.header?.focus();\n    } else {\n      this.getPreviousStep(focusedStep)?.header?.focus();\n    }\n  }\n\n  private getNextStep(\n    focusedStep: IgcStepComponent\n  ): IgcStepComponent | undefined {\n    if (focusedStep.index === this.steps.length - 1) {\n      return this.steps.find((step: IgcStepComponent) => step.isAccessible);\n    }\n\n    const nextAccessible = this.steps.find(\n      (step: IgcStepComponent, i: number) =>\n        i > focusedStep.index && step.isAccessible\n    );\n    return nextAccessible\n      ? nextAccessible\n      : this.steps.find((step: IgcStepComponent) => step.isAccessible);\n  }\n\n  private getPreviousStep(\n    focusedStep: IgcStepComponent\n  ): IgcStepComponent | undefined {\n    if (focusedStep.index === 0) {\n      return this.steps\n        .filter((step: IgcStepComponent) => step.isAccessible)\n        .pop();\n    }\n\n    let prevStep: IgcStepComponent | undefined;\n    for (let i = focusedStep.index - 1; i >= 0; i--) {\n      const step = this.steps[i];\n      if (step.isAccessible) {\n        prevStep = step;\n        break;\n      }\n    }\n\n    return prevStep\n      ? prevStep\n      : this.steps.filter((step: IgcStepComponent) => step.isAccessible).pop();\n  }\n\n  private updateStepsLinearDisabled(): void {\n    const firstInvalidStep = this.steps\n      .filter((step: IgcStepComponent) => !step.disabled && !step.optional)\n      .find((step: IgcStepComponent) => step.invalid);\n    if (firstInvalidStep) {\n      this.steps.forEach((step: IgcStepComponent) => {\n        if (step.index <= firstInvalidStep.index) {\n          step.linearDisabled = false;\n        } else {\n          step.linearDisabled = true;\n        }\n      });\n    } else {\n      this.steps.forEach((step: IgcStepComponent) => {\n        step.linearDisabled = false;\n      });\n    }\n  }\n\n  private updateAnimation(step: IgcStepComponent) {\n    if (this.orientation === 'horizontal') {\n      step.animation = this.horizontalAnimation;\n    }\n\n    if (this.orientation === 'vertical') {\n      step.animation = this.verticalAnimation;\n    }\n  }\n\n  private syncProperties(): void {\n    this.steps.forEach((step: IgcStepComponent, index: number) => {\n      step.orientation = this.orientation;\n      step.stepType = this.stepType;\n      step.titlePosition = this.titlePosition;\n      step.contentTop = this.contentTop;\n      step.index = index;\n      step.active = this.activeStep === step;\n      step.header?.setAttribute('aria-posinset', (index + 1).toString());\n      step.header?.setAttribute('aria-setsize', this.steps.length.toString());\n      step.header?.setAttribute('id', `igc-step-header-${index}`);\n      step.header?.setAttribute('aria-controls', `igc-step-content-${index}`);\n      if (index > 0) {\n        step.previousComplete = this.steps[index - 1].complete;\n      }\n      step.animationDuration = this.animationDuration;\n      this.updateAnimation(step);\n    });\n  }\n\n  private stepsChanged(): void {\n    this.style.setProperty('--steps-count', this.steps.length.toString());\n\n    const lastActiveStep = this.steps\n      .reverse()\n      .find((step: IgcStepComponent) => step.active);\n    if (!lastActiveStep) {\n      // initially when there isn't a predefined active step or when the active step is removed\n      this.activateFirstStep();\n    } else {\n      // activate the last step marked as active\n      this.activateStep(lastActiveStep, false);\n    }\n\n    this.syncProperties();\n    if (this.linear) {\n      this.updateStepsLinearDisabled();\n    }\n  }\n\n  /** Activates the step at a given index. */\n  public navigateTo(index: number) {\n    const step = this.steps[index];\n    if (!step) {\n      return;\n    }\n    this.activateStep(step, false);\n  }\n\n  /** Activates the next enabled step. */\n  public next(): void {\n    this.moveToNextStep();\n  }\n\n  /** Activates the previous enabled step. */\n  public prev(): void {\n    this.moveToNextStep(false);\n  }\n\n  /**\n   * Resets the stepper to its initial state i.e. activates the first step.\n   *\n   * @remarks\n   * The steps' content will not be automatically reset.\n   */\n  public reset(): void {\n    this.steps.forEach((step) => {\n      step.visited = false;\n    });\n    this.activateFirstStep();\n  }\n\n  protected override render() {\n    return html`<slot @slotchange=${this.stepsChanged}></slot>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-stepper': IgcStepperComponent;\n  }\n}\n"]}