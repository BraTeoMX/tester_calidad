{"version":3,"file":"expansion-panel.js","sourceRoot":"","sources":["../../../src/components/expansion-panel/expansion-panel.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html } from 'lit';\nimport { property, queryAssignedElements } from 'lit/decorators.js';\nimport { type Ref, createRef, ref } from 'lit/directives/ref.js';\n\nimport { addAnimationController } from '../../animations/player.js';\nimport { growVerIn, growVerOut } from '../../animations/presets/grow/index.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport {\n  addKeybindings,\n  altKey,\n  arrowDown,\n  arrowUp,\n} from '../common/controllers/key-bindings.js';\nimport { registerComponent } from '../common/definitions/register.js';\nimport type { Constructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { createCounter } from '../common/util.js';\nimport IgcIconComponent from '../icon/icon.js';\nimport { styles } from './themes/expansion-panel.base.css.js';\nimport { styles as shared } from './themes/shared/expansion-panel.common.css.js';\nimport { all } from './themes/themes.js';\n\nexport interface IgcExpansionPanelComponentEventMap {\n  igcOpening: CustomEvent<IgcExpansionPanelComponent>;\n  igcOpened: CustomEvent<IgcExpansionPanelComponent>;\n  igcClosing: CustomEvent<IgcExpansionPanelComponent>;\n  igcClosed: CustomEvent<IgcExpansionPanelComponent>;\n}\n\n/**\n * The Expansion Panel Component provides a way to display information in a toggleable way -\n * compact summary view containing title and description and expanded detail view containing\n * additional content to the summary header.\n *\n * @element igc-expansion-panel\n *\n * @slot - renders the default content of the panel\n * @slot title - renders the title of the panel's header\n * @slot subtitle - renders the subtitle of the panel's header\n * @slot indicator - renders the expand/collapsed indicator\n * @slot indicator-expanded - renders the expanded state of the indicator\n *\n * @fires igcOpening - Emitted before opening the expansion panel.\n * @fires igcOpened - Emitted after the expansion panel is opened.\n * @fires igcClosing - Emitted before closing the expansion panel.\n * @fires igcClosed - Emitted after the expansion panel is closed.\n *\n * @csspart header - The container of the expansion indicator, title and subtitle.\n * @csspart title -  The title container.\n * @csspart subtitle - The subtitle container.\n * @csspart indicator - The indicator container.\n * @csspart content - The expansion panel's content wrapper.\n */\n\n@themes(all)\nexport default class IgcExpansionPanelComponent extends EventEmitterMixin<\n  IgcExpansionPanelComponentEventMap,\n  Constructor<LitElement>\n>(LitElement) {\n  public static readonly tagName = 'igc-expansion-panel';\n  public static styles = [styles, shared];\n\n  /* blazorSuppress */\n  public static register() {\n    registerComponent(IgcExpansionPanelComponent, IgcIconComponent);\n  }\n\n  private static readonly increment = createCounter();\n\n  private headerRef: Ref<HTMLDivElement> = createRef();\n  private contentRef: Ref<HTMLDivElement> = createRef();\n\n  private animationPlayer = addAnimationController(this, this.contentRef);\n\n  @queryAssignedElements({ slot: 'indicator-expanded' })\n  private _indicatorExpandedElements!: HTMLElement[];\n\n  /**\n   * Indicates whether the contents of the control should be visible.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public open = false;\n\n  /**\n   * Get/Set whether the expansion panel is disabled. Disabled panels are ignored for user interactions.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public disabled = false;\n\n  /**\n   * The indicator position of the expansion panel.\n   * @attr indicator-position\n   */\n  @property({ reflect: true, attribute: 'indicator-position' })\n  public indicatorPosition: 'start' | 'end' | 'none' = 'start';\n\n  private panelId!: string;\n\n  constructor() {\n    super();\n\n    addKeybindings(this, {\n      ref: this.headerRef,\n      bindingDefaults: { preventDefault: true },\n    })\n      .setActivateHandler(this.toggleWithEvent)\n      .set([altKey, arrowDown], this.openWithEvent)\n      .set([altKey, arrowUp], this.closeWithEvent);\n  }\n\n  public override connectedCallback() {\n    super.connectedCallback();\n    this.panelId =\n      this.getAttribute('id') ||\n      `igc-expansion-panel-${IgcExpansionPanelComponent.increment()}`;\n  }\n\n  private handleClicked() {\n    this.headerRef.value!.focus();\n    this.toggleWithEvent();\n  }\n\n  private toggleWithEvent() {\n    if (this.disabled) return;\n    this.open ? this.closeWithEvent() : this.openWithEvent();\n  }\n\n  private async toggleAnimation(dir: 'open' | 'close') {\n    const animation = dir === 'open' ? growVerIn : growVerOut;\n\n    const [_, event] = await Promise.all([\n      this.animationPlayer.stopAll(),\n      this.animationPlayer.play(animation()),\n    ]);\n\n    return event.type === 'finish';\n  }\n\n  private async openWithEvent() {\n    if (\n      this.open ||\n      !this.emitEvent('igcOpening', { cancelable: true, detail: this })\n    ) {\n      return;\n    }\n\n    this.open = true;\n\n    if (await this.toggleAnimation('open')) {\n      this.emitEvent('igcOpened', { detail: this });\n    }\n  }\n\n  private async closeWithEvent() {\n    if (\n      !this.open ||\n      !this.emitEvent('igcClosing', { cancelable: true, detail: this })\n    ) {\n      return;\n    }\n\n    this.open = false;\n\n    if (await this.toggleAnimation('close')) {\n      this.emitEvent('igcClosed', { detail: this });\n    }\n  }\n\n  /** Toggles panel open state. */\n  public toggle(): void {\n    this.open ? this.hide() : this.show();\n  }\n\n  /** Hides the panel content. */\n  public hide(): void {\n    if (this.open) {\n      this.toggleAnimation('close');\n    }\n\n    this.open = false;\n  }\n\n  /** Shows the panel content. */\n  public show(): void {\n    if (!this.open) {\n      this.toggleAnimation('open');\n    }\n\n    this.open = true;\n  }\n\n  private handleSlotChange() {\n    this.requestUpdate();\n  }\n\n  private indicatorTemplate() {\n    const indicatorHidden =\n      this.open && this._indicatorExpandedElements.length > 0;\n    const indicatorExpandedHidden =\n      this._indicatorExpandedElements.length < 1 || !this.open;\n\n    return html`\n      <div part=\"indicator\" aria-hidden=\"true\">\n        <slot\n          name=\"indicator\"\n          ?hidden=${indicatorHidden}\n          @slotchange=${this.handleSlotChange}\n        >\n          <igc-icon\n            name=${this.open ? 'keyboard_arrow_up' : 'keyboard_arrow_down'}\n            collection=\"internal\"\n          >\n          </igc-icon>\n        </slot>\n        <slot\n          name=\"indicator-expanded\"\n          ?hidden=${indicatorExpandedHidden}\n          @slotchange=${this.handleSlotChange}\n        ></slot>\n      </div>\n    `;\n  }\n\n  private headerTemplate() {\n    return html`\n      <div\n        ${ref(this.headerRef)}\n        part=\"header\"\n        id=\"${this.panelId!}-header\"\n        role=\"button\"\n        aria-expanded=\"${this.open}\"\n        aria-disabled=\"${this.disabled}\"\n        aria-controls=\"${this.panelId!}-content\"\n        tabindex=${this.disabled ? '-1' : '0'}\n        @click=${this.handleClicked}\n      >\n        ${this.indicatorTemplate()}\n        <div>\n          <slot name=\"title\" part=\"title\"></slot>\n          <slot name=\"subtitle\" part=\"subtitle\"></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  private contentTemplate() {\n    return html`\n      <div\n        ${ref(this.contentRef)}\n        part=\"content\"\n        role=\"region\"\n        id=\"${this.panelId!}-content\"\n        aria-labelledby=\"${this.panelId!}-header\"\n        .inert=${!this.open}\n        aria-hidden=${!this.open}\n      >\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  protected override render() {\n    return html`${this.headerTemplate()}${this.contentTemplate()}`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-expansion-panel': IgcExpansionPanelComponent;\n  }\n}\n"]}