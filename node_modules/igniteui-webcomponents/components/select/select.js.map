{"version":3,"file":"select.js","sourceRoot":"","sources":["../../../src/components/select/select.ts"],"names":[],"mappings":"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","sourcesContent":["import { html } from 'lit';\nimport {\n  property,\n  query,\n  queryAssignedElements,\n  state,\n} from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n\nimport { themeSymbol, themes } from '../../theming/theming-decorator.js';\nimport type { Theme } from '../../theming/types.js';\nimport {\n  addKeybindings,\n  altKey,\n  arrowDown,\n  arrowLeft,\n  arrowRight,\n  arrowUp,\n  endKey,\n  enterKey,\n  escapeKey,\n  homeKey,\n  spaceBar,\n  tabKey,\n} from '../common/controllers/key-bindings.js';\nimport { addRootClickHandler } from '../common/controllers/root-click.js';\nimport { addRootScrollHandler } from '../common/controllers/root-scroll.js';\nimport { alternateName } from '../common/decorators/alternateName.js';\nimport { blazorAdditionalDependencies } from '../common/decorators/blazorAdditionalDependencies.js';\nimport { blazorSuppress } from '../common/decorators/blazorSuppress.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { registerComponent } from '../common/definitions/register.js';\nimport {\n  IgcBaseComboBoxLikeComponent,\n  getActiveItems,\n  getItems,\n  getNextActiveItem,\n  getPreviousActiveItem,\n  setInitialSelectionState,\n} from '../common/mixins/combo-box.js';\nimport type { AbstractConstructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { FormAssociatedRequiredMixin } from '../common/mixins/form-associated-required.js';\nimport { findElementFromEventPath, partNameMap } from '../common/util.js';\nimport { type Validator, requiredValidator } from '../common/validators.js';\nimport IgcIconComponent from '../icon/icon.js';\nimport IgcInputComponent from '../input/input.js';\nimport IgcPopoverComponent, { type IgcPlacement } from '../popover/popover.js';\nimport IgcSelectGroupComponent from './select-group.js';\nimport IgcSelectHeaderComponent from './select-header.js';\nimport IgcSelectItemComponent from './select-item.js';\nimport { styles } from './themes/select.base.css.js';\nimport { styles as shared } from './themes/shared/select.common.css.js';\nimport { all } from './themes/themes.js';\n\nexport interface IgcSelectEventMap {\n  igcChange: CustomEvent<IgcSelectItemComponent>;\n  igcBlur: CustomEvent<void>;\n  igcFocus: CustomEvent<void>;\n  igcOpening: CustomEvent<void>;\n  igcOpened: CustomEvent<void>;\n  igcClosing: CustomEvent<void>;\n  igcClosed: CustomEvent<void>;\n}\n\n/**\n * Represents a control that provides a menu of options.\n *\n * @element igc-select\n *\n * @slot - Renders the list of select items.\n * @slot prefix - Renders content before the input.\n * @slot suffix - Renders content after input.\n * @slot header - Renders a container before the list of options.\n * @slot footer - Renders a container after the list of options.\n * @slot helper-text - Renders content below the input.\n * @slot toggle-icon - Renders content inside the suffix container.\n * @slot toggle-icon-expanded - Renders content for the toggle icon when the component is in open state.\n *\n * @fires igcFocus - Emitted when the select gains focus.\n * @fires igcBlur - Emitted when the select loses focus.\n * @fires igcChange - Emitted when the control's checked state changes.\n * @fires igcOpening - Emitted just before the list of options is opened.\n * @fires igcOpened - Emitted after the list of options is opened.\n * @fires igcClosing - Emitter just before the list of options is closed.\n * @fires igcClosed - Emitted after the list of options is closed.\n *\n * @csspart list - The list wrapping container for the items of the igc-select.\n * @csspart input - The encapsulated igc-input of the igc-select.\n * @csspart label - The encapsulated text label of the igc-select.\n * @csspart prefix - The prefix wrapper of the input of the igc-select.\n * @csspart suffix - The suffix wrapper of the input of the igc-select.\n * @csspart toggle-icon - The toggle icon wrapper of the igc-select.\n * @csspart helper-text - The helper text wrapper of the igc-select.\n */\n@themes(all, true)\n@blazorAdditionalDependencies(\n  'IgcIconComponent, IgcInputComponent, IgcSelectGroupComponent, IgcSelectHeaderComponent, IgcSelectItemComponent'\n)\nexport default class IgcSelectComponent extends FormAssociatedRequiredMixin(\n  EventEmitterMixin<\n    IgcSelectEventMap,\n    AbstractConstructor<IgcBaseComboBoxLikeComponent>\n  >(IgcBaseComboBoxLikeComponent)\n) {\n  public static readonly tagName = 'igc-select';\n  public static styles = [styles, shared];\n\n  /* blazorSuppress */\n  public static register() {\n    registerComponent(\n      IgcSelectComponent,\n      IgcIconComponent,\n      IgcInputComponent,\n      IgcPopoverComponent,\n      IgcSelectGroupComponent,\n      IgcSelectHeaderComponent,\n      IgcSelectItemComponent\n    );\n  }\n\n  private declare readonly [themeSymbol]: Theme;\n  private _value!: string;\n  private _searchTerm = '';\n  private _lastKeyTime = 0;\n\n  private _rootClickController = addRootClickHandler(this, {\n    hideCallback: () => this._hide(true),\n  });\n\n  private _rootScrollController = addRootScrollHandler(this, {\n    hideCallback: () => this._hide(true),\n  });\n\n  private get isMaterialTheme() {\n    return this[themeSymbol] === 'material';\n  }\n\n  private get _activeItems() {\n    return Array.from(\n      getActiveItems<IgcSelectItemComponent>(\n        this,\n        IgcSelectItemComponent.tagName\n      )\n    );\n  }\n\n  @state()\n  protected _selectedItem: IgcSelectItemComponent | null = null;\n\n  @state()\n  protected _activeItem!: IgcSelectItemComponent;\n\n  protected override validators: Validator<this>[] = [requiredValidator];\n\n  @query(IgcInputComponent.tagName, true)\n  protected input!: IgcInputComponent;\n\n  @queryAssignedElements({ slot: 'helper-text' })\n  protected helperText!: Array<HTMLElement>;\n\n  @queryAssignedElements({ slot: 'suffix' })\n  protected inputSuffix!: Array<HTMLElement>;\n\n  @queryAssignedElements({ slot: 'prefix' })\n  protected inputPrefix!: Array<HTMLElement>;\n\n  @queryAssignedElements({ slot: 'toggle-icon-expanded' })\n  protected _expandedIconSlot!: Array<HTMLElement>;\n\n  protected get hasExpandedIcon() {\n    return this._expandedIconSlot.length > 0;\n  }\n\n  protected get hasPrefixes() {\n    return this.inputPrefix.length > 0;\n  }\n\n  protected get hasSuffixes() {\n    return this.inputSuffix.length > 0;\n  }\n\n  protected get hasHelperText() {\n    return this.helperText.length > 0;\n  }\n\n  /**\n   * The value attribute of the control.\n   * @attr\n   */\n  @property()\n  public get value(): string {\n    return this._value;\n  }\n\n  /* @tsTwoWayProperty(true, \"igcChange\", \"detail.value\", false) */\n  public set value(value: string) {\n    this._updateValue(value);\n    const item = this.getItem(this._value);\n    item ? this.setSelectedItem(item) : this.clearSelectedItem();\n  }\n\n  /**\n   * The outlined attribute of the control.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public outlined = false;\n\n  /**\n   * The autofocus attribute of the control.\n   * @attr\n   */\n  @property({ type: Boolean })\n  public override autofocus!: boolean;\n\n  /**\n   * The distance of the select dropdown from its input.\n   * @attr\n   */\n  @property({ type: Number })\n  public distance = 0;\n\n  /**\n   * The label attribute of the control.\n   * @attr\n   */\n  @property()\n  public label!: string;\n\n  /**\n   * The placeholder attribute of the control.\n   * @attr\n   */\n  @property()\n  public placeholder!: string;\n\n  /** The preferred placement of the select dropdown around its input.\n   * @type {'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'right' | 'right-start' | 'right-end' | 'left' | 'left-start' | 'left-end'}\n   * @attr\n   */\n  @property()\n  public placement: IgcPlacement = 'bottom-start';\n\n  /**\n   * @deprecated since version 4.3.0\n   * @hidden @internal @private\n   */\n  public positionStrategy: 'absolute' | 'fixed' = 'fixed';\n\n  /**\n   * Determines the behavior of the component during scrolling of the parent container.\n   * @attr scroll-strategy\n   */\n  @property({ attribute: 'scroll-strategy' })\n  public scrollStrategy: 'scroll' | 'block' | 'close' = 'scroll';\n\n  /**\n   * Whether the dropdown's width should be the same as the target's one.\n   * @deprecated since version 4.3.0\n   * @hidden @internal @private\n   * @attr same-width\n   */\n  @property({ type: Boolean, attribute: 'same-width' })\n  public sameWidth = true;\n\n  /**\n   * Whether the component should be flipped to the opposite side of the target once it's about to overflow the visible area.\n   * When true, once enough space is detected on its preferred side, it will flip back.\n   * @deprecated since version 4.3.0\n   * @hidden @internal @private\n   * @attr\n   */\n  @property({ type: Boolean })\n  public flip = true;\n\n  /** Returns the items of the igc-select component. */\n  public get items() {\n    return Array.from(\n      getItems<IgcSelectItemComponent>(this, IgcSelectItemComponent.tagName)\n    );\n  }\n\n  /** Returns the groups of the igc-select component. */\n  public get groups() {\n    return Array.from(\n      getItems<IgcSelectGroupComponent>(this, IgcSelectGroupComponent.tagName)\n    );\n  }\n\n  /** Returns the selected item from the dropdown or null.  */\n  public get selectedItem() {\n    return this._selectedItem;\n  }\n\n  @watch('scrollStrategy', { waitUntilFirstUpdate: true })\n  protected scrollStrategyChanged() {\n    this._rootScrollController.update({ resetListeners: true });\n  }\n\n  @watch('open', { waitUntilFirstUpdate: true })\n  protected openChange() {\n    this._rootClickController.update();\n    this._rootScrollController.update();\n  }\n\n  constructor() {\n    super();\n\n    addKeybindings(this, {\n      skip: () => this.disabled,\n      bindingDefaults: { preventDefault: true, triggers: ['keydownRepeat'] },\n    })\n      .set([altKey, arrowDown], this.altArrowDown)\n      .set([altKey, arrowUp], this.altArrowUp)\n      .set(arrowDown, this.onArrowDown)\n      .set(arrowUp, this.onArrowUp)\n      .set(arrowLeft, this.onArrowUp)\n      .set(arrowRight, this.onArrowDown)\n      .set(tabKey, this.onTabKey, { preventDefault: false })\n      .set(escapeKey, this.onEscapeKey)\n      .set(homeKey, this.onHomeKey)\n      .set(endKey, this.onEndKey)\n      .set(spaceBar, this.onSpaceBarKey)\n      .set(enterKey, this.onEnterKey);\n\n    this.addEventListener('keydown', this.handleSearch);\n    this.addEventListener('focusin', this.handleFocusIn);\n    this.addEventListener('focusout', this.handleFocusOut);\n  }\n\n  protected override async firstUpdated() {\n    await this.updateComplete;\n    const selected = setInitialSelectionState(this.items);\n\n    if (this.value && !selected) {\n      this._selectItem(this.getItem(this.value), false);\n    }\n\n    if (selected && selected.value !== this.value) {\n      this._defaultValue = selected.value;\n      this._selectItem(selected, false);\n    }\n\n    if (this.autofocus) {\n      this.focus();\n    }\n\n    this.updateValidity();\n  }\n\n  private handleFocusIn({ relatedTarget }: FocusEvent) {\n    this._dirty = true;\n\n    if (this.contains(relatedTarget as Node) || this.open) {\n      return;\n    }\n\n    this.emitEvent('igcFocus');\n  }\n\n  private handleFocusOut({ relatedTarget }: FocusEvent) {\n    if (this.contains(relatedTarget as Node)) {\n      return;\n    }\n\n    this.checkValidity();\n    this.emitEvent('igcBlur');\n  }\n\n  private handleClick(event: MouseEvent) {\n    const item = findElementFromEventPath<IgcSelectItemComponent>(\n      IgcSelectItemComponent.tagName,\n      event\n    );\n    if (item && this._activeItems.includes(item)) {\n      this._selectItem(item);\n    }\n  }\n\n  private handleChange(item: IgcSelectItemComponent) {\n    return this.emitEvent('igcChange', { detail: item });\n  }\n\n  private handleSearch(event: KeyboardEvent) {\n    if (!/^.$/u.test(event.key)) {\n      return;\n    }\n\n    event.preventDefault();\n    const now = Date.now();\n\n    if (now - this._lastKeyTime > 500) {\n      this._searchTerm = '';\n    }\n\n    this._lastKeyTime = now;\n    this._searchTerm += event.key.toLocaleLowerCase();\n\n    const item = this._activeItems.find((item) =>\n      item.textContent?.trim().toLocaleLowerCase().startsWith(this._searchTerm)\n    );\n\n    if (item) {\n      this.open ? this.activateItem(item) : this._selectItem(item);\n      this._activeItem.focus();\n    }\n  }\n\n  protected override handleAnchorClick(): void {\n    super.handleAnchorClick();\n    this.focusItemOnOpen();\n  }\n\n  private onEnterKey() {\n    this.open && this._activeItem\n      ? this._selectItem(this._activeItem)\n      : this.handleAnchorClick();\n  }\n\n  private onSpaceBarKey() {\n    if (!this.open) {\n      this.handleAnchorClick();\n    }\n  }\n\n  private onArrowDown() {\n    const item = getNextActiveItem(this.items, this._activeItem);\n    this.open ? this._navigateToActiveItem(item) : this._selectItem(item);\n  }\n\n  private onArrowUp() {\n    const item = getPreviousActiveItem(this.items, this._activeItem);\n    this.open ? this._navigateToActiveItem(item) : this._selectItem(item);\n  }\n\n  private altArrowDown() {\n    if (!this.open) {\n      this._show(true);\n      this.focusItemOnOpen();\n    }\n  }\n\n  private async altArrowUp() {\n    if (this.open && (await this._hide(true))) {\n      this.input.focus();\n    }\n  }\n\n  protected async onEscapeKey() {\n    if (await this._hide(true)) {\n      this.input.focus();\n    }\n  }\n\n  private onTabKey(event: KeyboardEvent) {\n    if (this.open) {\n      event.preventDefault();\n      this._selectItem(this._activeItem);\n      this._hide(true);\n    }\n  }\n\n  protected onHomeKey() {\n    const item = this._activeItems.at(0);\n    this.open ? this._navigateToActiveItem(item) : this._selectItem(item);\n  }\n\n  protected onEndKey() {\n    const item = this._activeItems.at(-1);\n    this.open ? this._navigateToActiveItem(item) : this._selectItem(item);\n  }\n\n  /** Monitor input slot changes and request update */\n  protected inputSlotChanged() {\n    this.requestUpdate();\n  }\n\n  private activateItem(item: IgcSelectItemComponent) {\n    if (this._activeItem) {\n      this._activeItem.active = false;\n    }\n\n    this._activeItem = item;\n    this._activeItem.active = true;\n  }\n\n  private setSelectedItem(item: IgcSelectItemComponent) {\n    if (this._selectedItem) {\n      this._selectedItem.selected = false;\n    }\n\n    this._selectedItem = item;\n    this._selectedItem.selected = true;\n\n    return this._selectedItem;\n  }\n\n  private _selectItem(item?: IgcSelectItemComponent, emit = true) {\n    if (!item) {\n      this.clearSelectedItem();\n      this._updateValue();\n      return null;\n    }\n\n    const items = this.items;\n    const [previous, current] = [\n      items.indexOf(this._selectedItem!),\n      items.indexOf(item),\n    ];\n\n    if (previous === current) {\n      return this._selectedItem;\n    }\n\n    const newItem = this.setSelectedItem(item);\n    this.activateItem(newItem);\n    this._updateValue(newItem.value);\n\n    if (emit) this.handleChange(newItem);\n    if (emit && this.open) this.input.focus();\n    if (emit && !this.keepOpenOnSelect) this._hide(true);\n\n    return this._selectedItem;\n  }\n\n  private _navigateToActiveItem(item?: IgcSelectItemComponent) {\n    if (item) {\n      this.activateItem(item);\n      this._activeItem.focus({ preventScroll: true });\n      item.scrollIntoView({ behavior: 'auto', block: 'nearest' });\n    }\n  }\n\n  private _updateValue(value?: string) {\n    this._value = value as string;\n    this.setFormValue(this._value ? this._value : null);\n    this.updateValidity();\n    this.setInvalidState();\n  }\n\n  private clearSelectedItem() {\n    if (this._selectedItem) {\n      this._selectedItem.selected = false;\n    }\n    this._selectedItem = null;\n  }\n\n  private async focusItemOnOpen() {\n    await this.updateComplete;\n    (this._selectedItem || this._activeItem)?.focus();\n  }\n\n  protected getItem(value: string) {\n    return this.items.find((item) => item.value === value);\n  }\n\n  private _stopPropagation(e: Event) {\n    e.stopPropagation();\n  }\n\n  /** Sets focus on the component. */\n  @alternateName('focusComponent')\n  public override focus(options?: FocusOptions) {\n    this.input.focus(options);\n  }\n\n  /** Removes focus from the component. */\n  @alternateName('blurComponent')\n  public override blur() {\n    this.input.blur();\n    super.blur();\n  }\n\n  /** Checks the validity of the control and moves the focus to it if it is not valid. */\n  public override reportValidity() {\n    const valid = super.reportValidity();\n    if (!valid) this.input.focus();\n    return valid;\n  }\n\n  /** Navigates to the item with the specified value. If it exists, returns the found item, otherwise - null. */\n  public navigateTo(value: string): IgcSelectItemComponent | null;\n  /** Navigates to the item at the specified index. If it exists, returns the found item, otherwise - null. */\n  public navigateTo(index: number): IgcSelectItemComponent | null;\n  /** Navigates to the specified item. If it exists, returns the found item, otherwise - null. */\n  @blazorSuppress()\n  public navigateTo(value: string | number): IgcSelectItemComponent | null {\n    const item =\n      typeof value === 'string' ? this.getItem(value) : this.items[value];\n\n    if (item) {\n      this._navigateToActiveItem(item);\n    }\n\n    return item ?? null;\n  }\n\n  /** Selects the item with the specified value. If it exists, returns the found item, otherwise - null. */\n  public select(value: string): IgcSelectItemComponent | null;\n  /** Selects the item at the specified index. If it exists, returns the found item, otherwise - null. */\n  public select(index: number): IgcSelectItemComponent | null;\n  /** Selects the specified item. If it exists, returns the found item, otherwise - null. */\n  @blazorSuppress()\n  public select(value: string | number): IgcSelectItemComponent | null {\n    const item =\n      typeof value === 'string' ? this.getItem(value) : this.items[value];\n    return item ? this._selectItem(item, false) : null;\n  }\n\n  /**  Resets the current value and selection of the component. */\n  public clearSelection() {\n    this._updateValue();\n    this.clearSelectedItem();\n  }\n\n  protected renderInputSlots() {\n    const prefixName = this.hasPrefixes ? 'prefix' : '';\n    const suffixName = this.hasSuffixes ? 'suffix' : '';\n\n    return html`\n      <span slot=${prefixName}>\n        <slot name=\"prefix\" @slotchange=${this.inputSlotChanged}></slot>\n      </span>\n\n      <span slot=${suffixName}>\n        <slot name=\"suffix\" @slotchange=${this.inputSlotChanged}></slot>\n      </span>\n    `;\n  }\n\n  protected renderToggleIcon() {\n    const parts = partNameMap({ 'toggle-icon': true, filled: this.value! });\n    const iconHidden = this.open && this.hasExpandedIcon;\n    const iconExpandedHidden = !this.hasExpandedIcon || !this.open;\n\n    const openIcon = this.isMaterialTheme\n      ? 'keyboard_arrow_up'\n      : 'arrow_drop_up';\n    const closeIcon = this.isMaterialTheme\n      ? 'keyboard_arrow_down'\n      : 'arrow_drop_down';\n\n    return html`\n      <span slot=\"suffix\" part=${parts} aria-hidden=\"true\">\n        <slot\n          name=\"toggle-icon\"\n          ?hidden=${iconHidden}\n          @slotchange=${this.inputSlotChanged}\n        >\n          <igc-icon\n            name=${this.open ? openIcon : closeIcon}\n            collection=\"internal\"\n          ></igc-icon>\n        </slot>\n        <slot\n          name=\"toggle-icon-expanded\"\n          ?hidden=${iconExpandedHidden}\n          @slotchange=${this.inputSlotChanged}\n        ></slot>\n      </span>\n    `;\n  }\n\n  protected renderHelperText() {\n    return html`\n      <div\n        id=\"helper-text\"\n        part=\"helper-text\"\n        slot=\"anchor\"\n        ?hidden=${!this.hasHelperText}\n      >\n        <slot name=\"helper-text\" @slotchange=${this.inputSlotChanged}></slot>\n      </div>\n    `;\n  }\n\n  protected renderInputAnchor() {\n    const value = this.selectedItem?.textContent?.trim();\n\n    return html`\n      <igc-input\n        id=\"input\"\n        slot=\"anchor\"\n        role=\"combobox\"\n        readonly\n        aria-controls=\"dropdown\"\n        aria-describedby=\"helper-text\"\n        aria-expanded=${this.open ? 'true' : 'false'}\n        exportparts=\"container: input, input: native-input, label, prefix, suffix\"\n        tabIndex=${this.disabled ? -1 : 0}\n        value=${ifDefined(value)}\n        placeholder=${ifDefined(this.placeholder)}\n        label=${ifDefined(this.label)}\n        .disabled=${this.disabled}\n        .required=${this.required}\n        .invalid=${this.invalid}\n        .outlined=${this.outlined}\n        @click=${this.handleAnchorClick}\n        @igcFocus=${this._stopPropagation}\n        @igcBlur=${this._stopPropagation}\n      >\n        ${this.renderInputSlots()} ${this.renderToggleIcon()}\n      </igc-input>\n\n      ${this.renderHelperText()}\n    `;\n  }\n\n  protected renderDropdown() {\n    return html`<div part=\"base\" .inert=${!this.open}>\n      <div\n        id=\"dropdown\"\n        role=\"listbox\"\n        part=\"list\"\n        aria-labelledby=\"input\"\n        @click=${this.handleClick}\n      >\n        <slot name=\"header\"></slot>\n        <slot></slot>\n        <slot name=\"footer\"></slot>\n      </div>\n    </div>`;\n  }\n\n  protected override render() {\n    return html`<igc-popover\n      ?open=${this.open}\n      flip\n      shift\n      same-width\n      .offset=${this.distance}\n      .placement=${this.placement}\n      >${this.renderInputAnchor()} ${this.renderDropdown()}\n    </igc-popover>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-select': IgcSelectComponent;\n  }\n}\n"]}