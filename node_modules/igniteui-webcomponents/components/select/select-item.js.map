{"version":3,"file":"select-item.js","sourceRoot":"","sources":["../../../src/components/select/select-item.ts"],"names":[],"mappings":";;;;;;;AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,MAAM,EAAE,MAAM,oCAAoC,CAAC;AAC5D,OAAO,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAC;AACtE,OAAO,EAAE,0BAA0B,EAAE,MAAM,4BAA4B,CAAC;AACxE,OAAO,EAAE,MAAM,EAAE,MAAM,8CAA8C,CAAC;AACtE,OAAO,EAAE,GAAG,EAAE,MAAM,4BAA4B,CAAC;AACjD,OAAO,EAAE,MAAM,IAAI,MAAM,EAAE,MAAM,4DAA4D,CAAC;AAgB/E,IAAM,sBAAsB,8BAA5B,MAAM,sBAAuB,SAAQ,0BAA0B;IAKrE,MAAM,CAAC,QAAQ;QACpB,iBAAiB,CAAC,wBAAsB,CAAC,CAAC;IAC5C,CAAC;IAOD,IAAoB,MAAM,CAAC,KAAc;QACvC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,IAAoB,MAAM;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;;AApBsB,8BAAO,GAAG,iBAAiB,AAApB,CAAqB;AAC5B,6BAAM,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,AAAnB,CAAoB;AAYjD;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;oDAI1C;AAjBkB,sBAAsB;IAD1C,MAAM,CAAC,GAAG,CAAC;GACS,sBAAsB,CAsB1C;eAtBoB,sBAAsB","sourcesContent":["import { property } from 'lit/decorators.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { registerComponent } from '../common/definitions/register.js';\nimport { IgcBaseOptionLikeComponent } from '../common/mixins/option.js';\nimport { styles } from '../dropdown/themes/dropdown-item.base.css.js';\nimport { all } from '../dropdown/themes/item.js';\nimport { styles as shared } from '../dropdown/themes/shared/item/dropdown-item.common.css.js';\n\n/**\n * Represents an item in a select list.\n *\n * @element igc-select-item\n *\n * @slot - Renders the all content bar the prefix and suffix.\n * @slot prefix - Renders content before the main content area.\n * @slot suffix - Renders content after the main content area.\n *\n * @csspart prefix - The prefix wrapper of the igc-select-item.\n * @csspart content - The main content wrapper of the igc-select-item.\n * @csspart suffix - The suffix wrapper of the igc-select-item.\n */\n@themes(all)\nexport default class IgcSelectItemComponent extends IgcBaseOptionLikeComponent {\n  public static readonly tagName = 'igc-select-item';\n  public static override styles = [styles, shared];\n\n  /* blazorSuppress */\n  public static register() {\n    registerComponent(IgcSelectItemComponent);\n  }\n\n  /**\n   * Whether the item is disabled.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public override set active(value: boolean) {\n    this._active = Boolean(value);\n    this.tabIndex = this._active ? 0 : -1;\n  }\n\n  public override get active() {\n    return this._active;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-select-item': IgcSelectItemComponent;\n  }\n}\n"]}