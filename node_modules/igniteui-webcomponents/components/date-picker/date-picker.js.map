{"version":3,"file":"date-picker.js","sourceRoot":"","sources":["../../../src/components/date-picker/date-picker.ts"],"names":[],"mappings":"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","sourcesContent":["import { type ComplexAttributeConverter, LitElement, html, nothing } from 'lit';\nimport { property, query, queryAssignedElements } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { live } from 'lit/directives/live.js';\n\nimport { themeSymbol, themes } from '../../theming/theming-decorator.js';\nimport type { Theme } from '../../theming/types.js';\nimport IgcCalendarComponent, { focusActiveDate } from '../calendar/calendar.js';\nimport {\n  type DateRangeDescriptor,\n  DateRangeType,\n  isDateInRanges,\n} from '../calendar/common/calendar.model.js';\nimport {\n  addKeybindings,\n  altKey,\n  arrowDown,\n  arrowUp,\n  escapeKey,\n} from '../common/controllers/key-bindings.js';\nimport { addRootClickHandler } from '../common/controllers/root-click.js';\nimport { blazorAdditionalDependencies } from '../common/decorators/blazorAdditionalDependencies.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { registerComponent } from '../common/definitions/register.js';\nimport {\n  IgcCalendarResourceStringEN,\n  type IgcCalendarResourceStrings,\n} from '../common/i18n/calendar.resources.js';\nimport messages from '../common/localization/validation-en.js';\nimport { IgcBaseComboBoxLikeComponent } from '../common/mixins/combo-box.js';\nimport type { AbstractConstructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { FormAssociatedRequiredMixin } from '../common/mixins/form-associated-required.js';\nimport {\n  createCounter,\n  findElementFromEventPath,\n  formatString,\n} from '../common/util.js';\nimport {\n  type Validator,\n  maxDateValidator,\n  minDateValidator,\n  requiredValidator,\n} from '../common/validators.js';\nimport IgcDateTimeInputComponent from '../date-time-input/date-time-input.js';\nimport type { DatePart } from '../date-time-input/date-util.js';\nimport IgcDialogComponent from '../dialog/dialog.js';\nimport IgcFocusTrapComponent from '../focus-trap/focus-trap.js';\nimport IgcIconComponent from '../icon/icon.js';\nimport IgcPopoverComponent from '../popover/popover.js';\nimport { styles } from './themes/date-picker.base.css.js';\nimport { styles as shared } from './themes/shared/date-picker.common.css.js';\nimport { all } from './themes/themes.js';\n\nexport interface IgcDatepickerEventMap {\n  igcOpening: CustomEvent<void>;\n  igcOpened: CustomEvent<void>;\n  igcClosing: CustomEvent<void>;\n  igcClosed: CustomEvent<void>;\n  igcChange: CustomEvent<Date>;\n  igcInput: CustomEvent<Date>;\n}\n\nconst converter: ComplexAttributeConverter<Date | undefined> = {\n  fromAttribute: (value: string) => (value ? new Date(value) : undefined),\n  toAttribute: (value: Date) => value.toISOString(),\n};\n\nconst formats = new Set(['short', 'medium', 'long', 'full']);\n\n/**\n * igc-date-picker is a feature rich component used for entering a date through manual text input or\n * choosing date values from a calendar dialog that pops up.\n *\n * @element igc-date-picker\n *\n * @slot prefix - Renders content before the input.\n * @slot suffix - Renders content after the input.\n * @slot helper-text - Renders content below the input.\n * @slot title - Renders content in the calendar title.\n * @slot clear-icon - Renders a clear icon template.\n * @slot calendar-icon - Renders the icon/content for the calendar picker.\n * @slot calendar-icon-open - Renders the icon/content for the picker in open state.\n * @slot actions - Renders content in the action part of the picker in open state.\n *\n * @fires igcOpening - Emitted just before the calendar dropdown is shown.\n * @fires igcOpened - Emitted after the calendar dropdown is shown.\n * @fires igcClosing - Emitted just before the calendar dropdown is hidden.\n * @fires igcClosed - Emitted after the calendar dropdown is hidden.\n * @fires igcChange - Emitted when the user modifies and commits the elements's value.\n * @fires igcInput - Emitted when when the user types in the element.\n *\n * @csspart label - The label wrapper that renders content above the target input.\n * @csspart container - The main wrapper that holds all main input elements.\n * @csspart input - The native input element.\n * @csspart prefix - The prefix wrapper.\n * @csspart suffix - The suffix wrapper.\n * @csspart calendar-icon - The calendar icon wrapper for closed state.\n * @csspart calendar-icon-open - The calendar icon wrapper for opened state.\n * @csspart clear-icon - The clear icon wrapper.\n * @csspart actions - The actions wrapper.\n * @csspart helper-text - The helper-text wrapper that renders content below the target input.\n * @csspart header - The calendar header element.\n * @csspart header-title - The calendar header title element.\n * @csspart header-date - The calendar header date element.\n * @csspart calendar-content - The calendar content element which contains the views and navigation elements.\n * @csspart navigation - The calendar navigation container element.\n * @csspart months-navigation - The calendar months navigation button element.\n * @csspart years-navigation - The calendar years navigation button element.\n * @csspart years-range - The calendar years range element.\n * @csspart navigation-buttons - The calendar navigation buttons container.\n * @csspart navigation-button - The calendar previous/next navigation button.\n * @csspart days-view-container - The calendar days view container element.\n * @csspart days-view - The calendar days view element.\n * @csspart months-view - The calendar months view element.\n * @csspart years-view - The calendar years view element.\n * @csspart days-row - The calendar days row element.\n * @csspart calendar-label - The calendar week header label element.\n * @csspart week-number - The calendar week number element.\n * @csspart week-number-inner - The calendar week number inner element.\n * @csspart date - The calendar date element.\n * @csspart date-inner - The calendar date inner element.\n * @csspart first - The calendar first selected date element in range selection.\n * @csspart last - The calendar last selected date element in range selection.\n * @csspart inactive - The calendar inactive date element.\n * @csspart hidden - The calendar hidden date element.\n * @csspart weekend - The calendar weekend date element.\n * @csspart range - The calendar range selected element.\n * @csspart special - The calendar special date element.\n * @csspart disabled - The calendar disabled date element.\n * @csspart single - The calendar single selected date element.\n * @csspart preview - The calendar range selection preview date element.\n * @csspart month - The calendar month element.\n * @csspart month-inner - The calendar month inner element.\n * @csspart year - The calendar year element.\n * @csspart year-inner - The calendar year inner element.\n * @csspart selected - The calendar selected state for element(s). Applies to date, month and year elements.\n * @csspart current - The calendar current state for element(s). Applies to date, month and year elements.\n */\n@themes(all, true)\n@blazorAdditionalDependencies(\n  'IgcCalendarComponent, IgcDateTimeInputComponent, IgcDialogComponent, IgcIconComponent'\n)\nexport default class IgcDatePickerComponent extends FormAssociatedRequiredMixin(\n  EventEmitterMixin<\n    IgcDatepickerEventMap,\n    AbstractConstructor<IgcBaseComboBoxLikeComponent>\n  >(IgcBaseComboBoxLikeComponent)\n) {\n  public static readonly tagName = 'igc-date-picker';\n  public static styles = [styles, shared];\n\n  protected static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  private static readonly increment = createCounter();\n  protected inputId = `date-picker-${IgcDatePickerComponent.increment()}`;\n\n  private declare readonly [themeSymbol]: Theme;\n\n  protected override validators: Validator<this>[] = [\n    requiredValidator,\n    minDateValidator,\n    maxDateValidator,\n    {\n      key: 'badInput',\n      message: () => formatString(messages.disabledDate, this.value),\n      isValid: () =>\n        this.value\n          ? !isDateInRanges(this.value, this.disabledDates ?? [])\n          : true,\n    },\n  ];\n\n  /* blazorSuppress */\n  public static register() {\n    registerComponent(\n      IgcDatePickerComponent,\n      IgcCalendarComponent,\n      IgcDateTimeInputComponent,\n      IgcFocusTrapComponent,\n      IgcIconComponent,\n      IgcPopoverComponent,\n      IgcDialogComponent\n    );\n  }\n\n  private _value?: Date | null;\n  private _activeDate?: Date | null;\n  private _min?: Date;\n  private _max?: Date;\n  private _disabledDates?: DateRangeDescriptor[];\n  private _dateConstraints?: DateRangeDescriptor[];\n  private _displayFormat?: string;\n  private _inputFormat?: string;\n\n  private _rootClickController = addRootClickHandler(this, {\n    hideCallback: this.handleClosing,\n  });\n\n  private get isDropDown() {\n    return this.mode === 'dropdown';\n  }\n\n  private get isMaterialTheme() {\n    return this[themeSymbol] === 'material';\n  }\n\n  @query(IgcDateTimeInputComponent.tagName)\n  private _input!: IgcDateTimeInputComponent;\n\n  @query(IgcCalendarComponent.tagName)\n  private _calendar!: IgcCalendarComponent;\n\n  @queryAssignedElements({ slot: 'prefix' })\n  private prefixes!: Array<HTMLElement>;\n\n  @queryAssignedElements({ slot: 'suffix' })\n  private suffixes!: Array<HTMLElement>;\n\n  @queryAssignedElements({ slot: 'actions' })\n  private actions!: Array<HTMLElement>;\n\n  @queryAssignedElements({ slot: 'helper-text' })\n  private helperText!: Array<HTMLElement>;\n\n  /**\n   * Sets the state of the datepicker dropdown.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public override open = false;\n\n  /**\n   * The label of the datepicker.\n   * @attr label\n   */\n  @property()\n  public label!: string;\n\n  /**\n   * Determines whether the calendar is opened in a dropdown or a modal dialog\n   * @attr mode\n   */\n  @property()\n  public mode: 'dropdown' | 'dialog' = 'dropdown';\n\n  /**\n   * Whether to allow typing in the input.\n   * @attr non-editable\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'non-editable' })\n  public nonEditable = false;\n\n  /**\n   * Makes the control a readonly field.\n   * @attr readonly\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'readonly' })\n  public readOnly = false;\n\n  /* @tsTwoWayProperty(true, \"igcChange\", \"detail\", false) */\n  /**\n   * The value of the picker\n   * @attr\n   */\n  @property({ converter: converter })\n  public set value(value: Date | null) {\n    this._value = value;\n    this.setFormValue(value ? value.toISOString() : null);\n    this.updateValidity();\n    this.setInvalidState();\n  }\n\n  public get value(): Date | null {\n    return this._value ?? null;\n  }\n\n  /**\n   * Gets/Sets the date which is shown in the calendar picker and is highlighted.\n   * By default it is the current date.\n   */\n  @property({ attribute: 'active-date', converter: converter })\n  public set activeDate(value: Date) {\n    this._activeDate = value;\n  }\n\n  public get activeDate(): Date {\n    return this._activeDate ?? this._calendar?.activeDate;\n  }\n\n  /**\n   * The minimum value required for the date picker to remain valid.\n   * @attr\n   */\n  @property({ converter: converter })\n  public set min(value: Date) {\n    this._min = value;\n    this.setDateConstraints();\n    this.updateValidity();\n  }\n\n  public get min(): Date {\n    return this._min as Date;\n  }\n\n  /**\n   * The maximum value required for the date picker to remain valid.\n   * @attr\n   */\n  @property({ converter: converter })\n  public set max(value: Date) {\n    this._max = value;\n    this.setDateConstraints();\n    this.updateValidity();\n  }\n\n  public get max(): Date {\n    return this._max as Date;\n  }\n\n  /** The orientation of the calendar header.\n   * @attr header-orientation\n   */\n  @property({ attribute: 'header-orientation', reflect: true })\n  public headerOrientation: 'vertical' | 'horizontal' = 'horizontal';\n\n  /** The orientation of the multiple months displayed in the calendar's days view.\n   *  @attr\n   */\n  @property()\n  public orientation: 'vertical' | 'horizontal' = 'horizontal';\n\n  /** Determines whether the calendar hides its header.\n   * @attr hide-header\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'hide-header' })\n  public hideHeader = false;\n\n  /**\n   * Controls the visibility of the dates that do not belong to the current month.\n   * @attr hide-outside-days\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'hide-outside-days' })\n  public hideOutsideDays = false;\n\n  /** Gets/sets disabled dates. */\n  @property({ attribute: false })\n  public set disabledDates(dates: DateRangeDescriptor[]) {\n    this._disabledDates = dates;\n    this.setDateConstraints();\n    this.updateValidity();\n  }\n\n  public get disabledDates() {\n    return this._disabledDates as DateRangeDescriptor[];\n  }\n\n  /** Gets/sets special dates. */\n  @property({ attribute: false })\n  public specialDates!: DateRangeDescriptor[];\n\n  /**\n   * Whether the control will have outlined appearance.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public outlined = false;\n\n  /**\n   * The placeholder attribute of the control.\n   * @attr\n   */\n  @property()\n  public placeholder!: string;\n\n  /**\n   * The number of months displayed in the calendar.\n   * @attr visible-months\n   */\n  @property({ type: Number, attribute: 'visible-months' })\n  public visibleMonths = 1;\n\n  /**\n   * Whether to show the number of the week in the calendar.\n   * @attr show-week-numbers\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'show-week-numbers' })\n  public showWeekNumbers = false;\n\n  /**\n   * Format to display the value in when not editing.\n   * Defaults to the input format if not set.\n   * @attr display-format\n   */\n  @property({ attribute: 'display-format' })\n  public set displayFormat(value: string) {\n    this._displayFormat = value;\n  }\n\n  public get displayFormat(): string {\n    return this._displayFormat ?? this.inputFormat;\n  }\n\n  /**\n   * The date format to apply on the input.\n   * Defaults to the current locale Intl.DateTimeFormat\n   * @attr input-format\n   */\n  @property({ attribute: 'input-format' })\n  public set inputFormat(value: string) {\n    this._inputFormat = value;\n  }\n\n  public get inputFormat(): string {\n    return this._inputFormat ?? this._input?.inputFormat;\n  }\n\n  /**\n   * The locale settings used to display the value.\n   * @attr\n   */\n  @property()\n  public locale = 'en';\n\n  /** The prompt symbol to use for unfilled parts of the mask.\n   *  @attr\n   */\n  @property()\n  public prompt = '_';\n\n  /** The resource strings of the calendar. */\n  @property({ attribute: false })\n  public resourceStrings: IgcCalendarResourceStrings =\n    IgcCalendarResourceStringEN;\n\n  @watch('open')\n  protected openChange() {\n    this._rootClickController.update();\n  }\n\n  /** Sets the start day of the week for the calendar. */\n  @property({ attribute: 'week-start' })\n  public weekStart:\n    | 'sunday'\n    | 'monday'\n    | 'tuesday'\n    | 'wednesday'\n    | 'thursday'\n    | 'friday'\n    | 'saturday' = 'sunday';\n\n  constructor() {\n    super();\n\n    this.addEventListener('focusin', this.handleFocusIn);\n    this.addEventListener('focusout', this.handleFocusOut);\n\n    addKeybindings(this, {\n      skip: () => this.disabled,\n      bindingDefaults: { preventDefault: true },\n    })\n      .set([altKey, arrowDown], this.handleAnchorClick)\n      .set([altKey, arrowUp], this.onEscapeKey)\n      .set(escapeKey, this.onEscapeKey);\n  }\n\n  public override connectedCallback() {\n    super.connectedCallback();\n    this.updateValidity();\n  }\n\n  protected override createRenderRoot() {\n    const root = super.createRenderRoot();\n    root.addEventListener('slotchange', () => this.requestUpdate());\n    return root;\n  }\n\n  /** Clears the input part of the component of any user input */\n  public clear() {\n    this.value = null;\n    this._input?.clear();\n  }\n\n  /** Increments the passed in date part */\n  public stepUp(datePart?: DatePart, delta?: number): void {\n    this._input.stepUp(datePart, delta);\n  }\n\n  /** Decrements the passed in date part */\n  public stepDown(datePart?: DatePart, delta?: number): void {\n    this._input.stepDown(datePart, delta);\n  }\n\n  /** Selects the text in the input of the component */\n  public select(): void {\n    this._input.select();\n  }\n\n  /** Sets the text selection range in the input of the component */\n  public setSelectionRange(\n    start: number,\n    end: number,\n    direction?: 'none' | 'backward' | 'forward'\n  ): void {\n    this._input.setSelectionRange(start, end, direction);\n  }\n\n  /* Replaces the selected text in the input and re-applies the mask */\n  public setRangeText(\n    replacement: string,\n    start: number,\n    end: number,\n    mode?: 'select' | 'start' | 'end' | 'preserve'\n  ): void {\n    this._input.setRangeText(replacement, start, end, mode);\n    this.value = this._input.value;\n  }\n\n  protected async onEscapeKey() {\n    if (await this._hide(true)) {\n      this._input.focus();\n    }\n  }\n\n  protected handleFocusIn() {\n    this._dirty = true;\n  }\n\n  protected handleFocusOut({ relatedTarget }: FocusEvent) {\n    if (!this.contains(relatedTarget as Node)) {\n      this.checkValidity();\n    }\n  }\n\n  protected handlerCalendarIconSlotPointerDown(event: PointerEvent) {\n    // This is where the delegateFocus of the underlying input is a chore.\n    // If we have a required validator we don't want the input to enter an invalid\n    // state right off the bat when opening the picker which will happen since focus is transferred to the calendar element.\n    // So we call preventDefault on the event in order to not focus the input and trigger its validation logic on blur.\n    event.preventDefault();\n  }\n\n  protected handleInputClick(event: Event) {\n    if (findElementFromEventPath('input', event)) {\n      // Open only if the click originates from the underlying input\n      this.handleAnchorClick();\n    }\n  }\n\n  protected override async handleAnchorClick() {\n    this._calendar.activeDate = this.value ?? this._calendar.activeDate;\n\n    super.handleAnchorClick();\n    await this.updateComplete;\n    this._calendar[focusActiveDate]();\n  }\n\n  private async _shouldCloseCalendarDropdown() {\n    if (!this.keepOpenOnSelect && (await this._hide(true))) {\n      this._input.focus();\n      this._input.select();\n    }\n  }\n\n  protected handleInputChangeEvent(event: CustomEvent<Date>) {\n    event.stopPropagation();\n    this.value = (event.target as IgcDateTimeInputComponent).value!;\n    this.emitEvent('igcChange', { detail: this.value });\n  }\n\n  protected async handleCalendarChangeEvent(event: CustomEvent<Date>) {\n    event.stopPropagation();\n\n    if (this.readOnly) {\n      // Wait till the calendar finishes updating and then restore the current value from the date-picker.\n      await this._calendar.updateComplete;\n      this._calendar.value = this._value ?? undefined;\n      return;\n    }\n\n    this.value = (event.target as IgcCalendarComponent).value!;\n    this.emitEvent('igcChange', { detail: this.value });\n\n    this._shouldCloseCalendarDropdown();\n  }\n\n  protected handleInputEvent(event: CustomEvent<Date>) {\n    event.stopPropagation();\n\n    if (this.nonEditable) {\n      event.preventDefault();\n      return;\n    }\n\n    this.value = (event.target as IgcDateTimeInputComponent).value!;\n    this.emitEvent('igcInput', { detail: this.value });\n  }\n\n  protected handleClosing() {\n    this._hide(true);\n  }\n\n  protected handleDialogClosing(event: Event) {\n    event.stopPropagation();\n    this._hide(true);\n  }\n\n  protected handleDialogClosed(event: Event) {\n    event.stopPropagation();\n  }\n\n  private setDateConstraints() {\n    const dates: DateRangeDescriptor[] = [];\n    if (this._min) {\n      dates.push({ type: DateRangeType.Before, dateRange: [this._min] });\n    }\n    if (this._max) {\n      dates.push({ type: DateRangeType.After, dateRange: [this._max] });\n    }\n    if (this._disabledDates?.length) {\n      dates.push(...this.disabledDates);\n    }\n\n    this._dateConstraints = dates.length ? dates : undefined;\n  }\n\n  private renderClearIcon() {\n    return !this.value\n      ? nothing\n      : html`\n          <span slot=\"suffix\" part=\"clear-icon\" @click=${this.clear}>\n            <slot name=\"clear-icon\">\n              <igc-icon\n                name=\"clear\"\n                collection=\"internal\"\n                aria-hidden=\"true\"\n              ></igc-icon>\n            </slot>\n          </span>\n        `;\n  }\n\n  private renderCalendarIcon() {\n    const defaultIcon = html`\n      <igc-icon\n        name=\"calendar_today\"\n        collection=\"internal\"\n        aria-hidden=\"true\"\n      ></igc-icon>\n    `;\n\n    const state = this.open ? 'calendar-icon-open' : 'calendar-icon';\n\n    return html`\n      <span\n        slot=\"prefix\"\n        part=${state}\n        @pointerdown=${this.handlerCalendarIconSlotPointerDown}\n        @click=${this.handleAnchorClick}\n      >\n        <slot name=${state}>${defaultIcon}</slot>\n      </span>\n    `;\n  }\n\n  private renderCalendar(id: string) {\n    const hideHeader = this.isDropDown ? true : this.hideHeader;\n\n    return html`\n      <igc-calendar\n        aria-labelledby=${id}\n        role=\"dialog\"\n        .inert=${!this.open || this.disabled}\n        ?show-week-numbers=${this.showWeekNumbers}\n        ?hide-outside-days=${this.hideOutsideDays}\n        ?hide-header=${hideHeader}\n        .activeDate=${this.activeDate ?? this.value ?? new Date()}\n        .value=${this.value ?? undefined}\n        .headerOrientation=${this.headerOrientation}\n        .orientation=${this.orientation}\n        .visibleMonths=${this.visibleMonths}\n        .locale=${this.locale}\n        .disabledDates=${this._dateConstraints!}\n        .specialDates=${this.specialDates}\n        .weekStart=${this.weekStart}\n        @igcChange=${this.handleCalendarChangeEvent}\n        exportparts=\"header, header-title, header-date, content: calendar-content, navigation, months-navigation,\n        years-navigation, years-range, navigation-buttons, navigation-button, days-view-container,\n        days-view, months-view, years-view, days-row, label: calendar-label, week-number, week-number-inner, date,\n        date-inner, first, last, inactive, hidden, weekend, range, special, disabled, single, preview,\n        month, month-inner, year, year-inner, selected, current\"\n      >\n        ${!this.isDropDown\n          ? html`<slot name=\"title\" slot=\"title\"\n              >${this.resourceStrings.selectDate}</slot\n            >`\n          : nothing}\n      </igc-calendar>\n    `;\n  }\n\n  protected renderActions() {\n    const slot = this.isDropDown || !this.actions.length ? undefined : 'footer';\n\n    // If in dialog mode use the dialog footer slot\n    return html`\n      <div\n        part=\"actions\"\n        ?hidden=${!this.actions.length}\n        slot=${ifDefined(slot)}\n      >\n        <slot name=\"actions\"></slot>\n      </div>\n    `;\n  }\n\n  protected renderPicker(id: string) {\n    return this.isDropDown\n      ? html`\n          <igc-popover ?open=${this.open} anchor=${id} flip shift>\n            <igc-focus-trap ?disabled=${!this.open || this.disabled}>\n              ${this.renderCalendar(id)}${this.renderActions()}\n            </igc-focus-trap>\n          </igc-popover>\n        `\n      : html`\n          <igc-dialog\n            aria-label=${ifDefined(this.resourceStrings.selectDate)}\n            role=\"dialog\"\n            ?open=${this.open}\n            ?close-on-outside-click=${!this.keepOpenOnOutsideClick}\n            hide-default-action\n            @igcClosing=${this.handleDialogClosing}\n            @igcClosed=${this.handleDialogClosed}\n            exportparts=\"base: dialog-base, title, footer, overlay\"\n          >\n            ${this.renderCalendar(id)}${this.renderActions()}\n          </igc-dialog>\n        `;\n  }\n\n  private renderLabel(id: string) {\n    return this.label\n      ? html`<label\n          part=\"label\"\n          for=${id}\n          @click=${this.isDropDown ? nothing : this.handleAnchorClick}\n          >${this.label}</label\n        >`\n      : nothing;\n  }\n\n  private renderHelperText() {\n    return html`<div part=\"helper-text\" ?hidden=${!this.helperText.length}>\n      <slot name=\"helper-text\"></slot>\n    </div>`;\n  }\n\n  protected renderInput(id: string) {\n    const format = formats.has(this._displayFormat!)\n      ? `${this._displayFormat}Date`\n      : this._displayFormat;\n\n    // Dialog mode is always readonly, rest depends on configuration\n    const readOnly = !this.isDropDown || this.readOnly || this.nonEditable;\n\n    return html`\n      <igc-date-time-input\n        id=${id}\n        aria-haspopup=\"dialog\"\n        label=${ifDefined(this.isMaterialTheme ? this.label : undefined)}\n        input-format=${ifDefined(this._inputFormat)}\n        display-format=${ifDefined(format)}\n        ?disabled=${this.disabled}\n        ?readonly=${readOnly}\n        ?required=${this.required}\n        .value=${this.value ?? null}\n        .locale=${this.locale}\n        .prompt=${this.prompt}\n        .outlined=${this.outlined}\n        .placeholder=${this.placeholder}\n        .min=${this.min}\n        .max=${this.max}\n        .invalid=${live(this.invalid)}\n        @igcChange=${this.handleInputChangeEvent}\n        @igcInput=${this.handleInputEvent}\n        @click=${this.isDropDown ? nothing : this.handleInputClick}\n        exportparts=\"input, label, prefix, suffix\"\n      >\n        ${this.renderCalendarIcon()}\n        <slot\n          name=\"prefix\"\n          slot=${ifDefined(!this.prefixes.length ? undefined : 'prefix')}\n        ></slot>\n        ${this.renderClearIcon()}\n        <slot\n          name=\"suffix\"\n          slot=${ifDefined(!this.suffixes.length ? undefined : 'suffix')}\n        ></slot>\n      </igc-date-time-input>\n    `;\n  }\n\n  protected override render() {\n    const id = this.id || this.inputId;\n\n    return html`\n      ${!this.isMaterialTheme ? this.renderLabel(id) : nothing}\n      ${this.renderInput(id)}${this.renderPicker(id)}${this.renderHelperText()}\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-date-picker': IgcDatePickerComponent;\n  }\n}\n"]}