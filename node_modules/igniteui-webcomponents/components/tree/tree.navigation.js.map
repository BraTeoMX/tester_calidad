{"version":3,"file":"tree.navigation.js","sourceRoot":"","sources":["../../../src/components/tree/tree.navigation.ts"],"names":[],"mappings":"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","sourcesContent":["import { isLTR } from '../common/util.js';\nimport type IgcTreeItemComponent from './tree-item.js';\nimport type IgcTreeComponent from './tree.js';\nimport type { IgcTreeSelectionService } from './tree.selection.js';\n\nexport const NAVIGATION_KEYS = new Set([\n  'down',\n  'up',\n  'left',\n  'right',\n  'arrowdown',\n  'arrowup',\n  'arrowleft',\n  'arrowright',\n  'home',\n  'end',\n  'space',\n  'spacebar',\n  ' ',\n]);\n\n/* blazorSuppress */\nexport class IgcTreeNavigationService {\n  private tree!: IgcTreeComponent;\n  private selectionService!: IgcTreeSelectionService;\n\n  private _focusedItem: IgcTreeItemComponent | null = null;\n\n  private _lastFocusedItem: IgcTreeItemComponent | null = null;\n  private _activeItem: IgcTreeItemComponent | null = null;\n\n  private _visibleChildren: IgcTreeItemComponent[] = [];\n  private _invisibleChildren: Set<IgcTreeItemComponent> = new Set();\n  private _disabledChildren: Set<IgcTreeItemComponent> = new Set();\n\n  constructor(\n    tree: IgcTreeComponent,\n    selectionService: IgcTreeSelectionService\n  ) {\n    this.tree = tree;\n    this.selectionService = selectionService;\n  }\n\n  public updateVisChild(): void {\n    this._visibleChildren = this.tree?.items\n      ? this.tree.items.filter(\n          (i: IgcTreeItemComponent) =>\n            !(this._invisibleChildren.has(i) || this._disabledChildren.has(i))\n        )\n      : [];\n  }\n\n  public get focusedItem(): IgcTreeItemComponent | null {\n    return this._focusedItem;\n  }\n\n  public focusItem(value: IgcTreeItemComponent | null, shouldFocus = true) {\n    if (this._focusedItem === value) {\n      return;\n    }\n    this._lastFocusedItem = this._focusedItem;\n    if (this._lastFocusedItem) {\n      this._lastFocusedItem.removeAttribute('tabindex');\n    }\n    this._focusedItem = value;\n    if (this._focusedItem !== null && shouldFocus) {\n      this._focusedItem.tabIndex = 0;\n      this._focusedItem.focus({\n        preventScroll: true,\n      });\n      this._focusedItem.wrapper?.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'nearest',\n      });\n    }\n  }\n\n  public get activeItem(): IgcTreeItemComponent | null {\n    return this._activeItem;\n  }\n\n  public setActiveItem(value: IgcTreeItemComponent | null, shouldEmit = true) {\n    if (this._activeItem === value) {\n      return;\n    }\n    if (this._activeItem && value) {\n      this._activeItem.active = false;\n    }\n    this._activeItem = value;\n    if (this._activeItem) {\n      this._activeItem.active = true;\n    }\n    if (shouldEmit && this._activeItem) {\n      this.tree.emitEvent('igcActiveItem', { detail: this._activeItem });\n    }\n  }\n\n  public get visibleChildren(): IgcTreeItemComponent[] {\n    return this._visibleChildren;\n  }\n\n  public update_disabled_cache(item: IgcTreeItemComponent): void {\n    if (item.disabled) {\n      this._disabledChildren.add(item);\n    } else {\n      this._disabledChildren.delete(item);\n    }\n    this.updateVisChild();\n  }\n\n  public delete_item(item: IgcTreeItemComponent) {\n    if (this.activeItem === item) {\n      this.setActiveItem(null);\n    }\n    if (this.focusedItem === item) {\n      this.focusItem(null, false);\n      const firstNotDisableItem = this.tree.items.find(\n        (i: IgcTreeItemComponent) => !i.disabled\n      );\n      if (firstNotDisableItem) {\n        firstNotDisableItem.tabIndex = 0;\n        this.focusItem(firstNotDisableItem, false);\n      }\n    }\n  }\n\n  public update_visible_cache(\n    item: IgcTreeItemComponent,\n    expanded: boolean,\n    shouldUpdateNestedChildren = true,\n    shouldUpdate = true\n  ): void {\n    if (expanded && !this._invisibleChildren.has(item)) {\n      item.getChildren()?.forEach((child: IgcTreeItemComponent) => {\n        this._invisibleChildren.delete(child);\n        if (shouldUpdateNestedChildren) {\n          this.update_visible_cache(child, child.expanded, true, false);\n        }\n      });\n    } else {\n      item\n        .getChildren({ flatten: true })\n        ?.forEach((c: IgcTreeItemComponent) => this._invisibleChildren.add(c));\n    }\n\n    if (shouldUpdate) {\n      this.updateVisChild();\n    }\n  }\n\n  /**\n   * Sets the item as focused (and active)\n   *\n   * @param item target item\n   * @param isActive if true, sets the item as active\n   */\n  public setFocusedAndActiveItem(\n    item: IgcTreeItemComponent,\n    isActive = true,\n    shouldFocus = true\n  ): void {\n    if (isActive) {\n      this.setActiveItem(item);\n    }\n    this.focusItem(item, shouldFocus);\n  }\n\n  /** Handler for keydown events. Used in tree.component.ts */\n  public handleKeydown(event: KeyboardEvent) {\n    const key = event.key.toLowerCase();\n    if (!this.focusedItem) {\n      return;\n    }\n    if (!(NAVIGATION_KEYS.has(key) || key === '*')) {\n      if (key === 'enter') {\n        this.setActiveItem(this.focusedItem);\n      }\n      return;\n    }\n    event.preventDefault();\n    this.handleNavigation(event);\n  }\n\n  private handleNavigation(event: KeyboardEvent) {\n    switch (event.key.toLowerCase()) {\n      case 'home':\n        this.setFocusedAndActiveItem(this.visibleChildren[0]);\n        break;\n      case 'end':\n        this.setFocusedAndActiveItem(\n          this.visibleChildren[this.visibleChildren.length - 1]\n        );\n        break;\n      case 'arrowleft':\n      case 'left':\n        if (!isLTR(this.tree)) {\n          this.handleArrowRight();\n        } else {\n          this.handleArrowLeft();\n        }\n        break;\n      case 'arrowright':\n      case 'right':\n        if (!isLTR(this.tree)) {\n          this.handleArrowLeft();\n        } else {\n          this.handleArrowRight();\n        }\n        break;\n      case 'arrowup':\n      case 'up':\n        this.handleUpDownArrow(true, event);\n        break;\n      case 'arrowdown':\n      case 'down':\n        this.handleUpDownArrow(false, event);\n        break;\n      case '*':\n        this.handleAsterisk();\n        break;\n      case ' ':\n      case 'spacebar':\n      case 'space':\n        this.handleSpace(event.shiftKey);\n        break;\n      default:\n        return;\n    }\n  }\n\n  private handleArrowLeft(): void {\n    if (this.focusedItem?.expanded && this.focusedItem.getChildren()?.length) {\n      this.setActiveItem(this.focusedItem);\n      this.focusedItem.collapseWithEvent();\n    } else {\n      const parentItem = this.focusedItem?.parent;\n      if (parentItem && !parentItem.disabled) {\n        this.setFocusedAndActiveItem(parentItem);\n      }\n    }\n  }\n\n  private handleArrowRight(): void {\n    if (this.focusedItem!.getChildren()?.length > 0) {\n      if (!this.focusedItem?.expanded) {\n        this.setActiveItem(this.focusedItem);\n        this.focusedItem!.expandWithEvent();\n      } else {\n        const firstChild = this.focusedItem\n          .getChildren()\n          .find((item: IgcTreeItemComponent) => !item.disabled);\n        if (firstChild) {\n          this.setFocusedAndActiveItem(firstChild);\n        }\n      }\n    }\n  }\n\n  private handleUpDownArrow(isUp: boolean, event: KeyboardEvent): void {\n    const next = this.getVisibleItem(this.focusedItem!, isUp ? -1 : 1);\n    if (next === this.focusedItem) {\n      return;\n    }\n\n    if (event.ctrlKey) {\n      this.setFocusedAndActiveItem(next, false);\n    } else {\n      this.setFocusedAndActiveItem(next);\n    }\n  }\n\n  private handleAsterisk(): void {\n    const items = this.focusedItem?.parent\n      ? this.focusedItem!.parent?.getChildren()\n      : this.tree.items?.filter(\n          (item: IgcTreeItemComponent) => item.level === 0\n        );\n    items?.forEach((item: IgcTreeItemComponent) => {\n      if (!item.disabled && !item.expanded && item.hasChildren) {\n        item.expandWithEvent();\n      }\n    });\n  }\n\n  private handleSpace(shiftKey = false): void {\n    if (this.tree.selection === 'none') {\n      this.setActiveItem(this.focusedItem);\n      return;\n    }\n\n    this.setActiveItem(this.focusedItem);\n    if (shiftKey) {\n      this.selectionService.selectMultipleItems(this.focusedItem!);\n      return;\n    }\n\n    if (this.focusedItem!.selected) {\n      this.selectionService.deselectItem(this.focusedItem!);\n    } else {\n      this.selectionService.selectItem(this.focusedItem!);\n    }\n  }\n\n  /** Gets the next visible item in the given direction - 1 -> next, -1 -> previous */\n  private getVisibleItem(\n    item: IgcTreeItemComponent,\n    dir: 1 | -1 = 1\n  ): IgcTreeItemComponent {\n    const itemIndex = this.visibleChildren.indexOf(item);\n    return this.visibleChildren[itemIndex + dir] || item;\n  }\n}\n"]}