{"version":3,"file":"focus-ring.js","sourceRoot":"","sources":["../../../../src/components/common/controllers/focus-ring.ts"],"names":[],"mappings":"AAUA,MAAM,OAAO,2BAA2B;IAOtC,IAAW,OAAO;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,YAAqB,IAA0C;QAA1C,SAAI,GAAJ,IAAI,CAAsC;QATvD,aAAQ,GAAG,KAAK,CAAC;QAmClB,UAAK,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC7B,CAAC,CAAC;QA5BA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEM,aAAa;QAClB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC;IAEM,gBAAgB;QACrB,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;IAEM,WAAW;QAChB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC7B,CAAC;CAYF;AAKD,MAAM,UAAU,oBAAoB,CAClC,IAA0C;IAE1C,OAAO,IAAI,2BAA2B,CAAC,IAAI,CAAC,CAAC;AAC/C,CAAC","sourcesContent":["import type { ReactiveController, ReactiveControllerHost } from 'lit';\n\n/* blazorSuppress */\n/**\n * A controller class which determines whether a focus ring should be shown to indicate keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard, not with a mouse, touch, or other input methods.\n *\n * By default the class attaches a keyup event handler on the component host and will update its keyboard focus\n * state based on it.\n */\nexport class KeyboardFocusRingController implements ReactiveController {\n  private readonly _host: ReactiveControllerHost & HTMLElement;\n  private _focused = false;\n\n  /**\n   * Gets whether the current focus state is activated through a keyboard interaction.\n   */\n  public get focused() {\n    return this._focused;\n  }\n\n  constructor(readonly host: ReactiveControllerHost & HTMLElement) {\n    this._host = host;\n    host.addController(this);\n  }\n\n  public hostConnected() {\n    this._host.addEventListener('keyup', this);\n  }\n\n  public hostDisconnected() {\n    this._host.removeEventListener('keyup', this);\n  }\n\n  public handleEvent() {\n    if (!this._focused) {\n      this._focused = true;\n    }\n    this._host.requestUpdate();\n  }\n\n  /**\n   * Resets the keyboard focus state.\n   *\n   * Usually called on blur of the component or when a pointer based interaction\n   * is executed.\n   */\n  public reset = () => {\n    this._focused = false;\n    this._host.requestUpdate();\n  };\n}\n\n/**\n * Adds a {@link KeyboardFocusRingController} responsible for managing keyboard focus state.\n */\nexport function addKeyboardFocusRing(\n  host: ReactiveControllerHost & HTMLElement\n) {\n  return new KeyboardFocusRingController(host);\n}\n"]}