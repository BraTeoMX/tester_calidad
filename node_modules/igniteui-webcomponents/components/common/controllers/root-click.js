class RootClickController {
    constructor(host, config) {
        this.host = host;
        this.config = config;
        this.host.addController(this);
    }
    addEventListeners() {
        if (!this.host.keepOpenOnOutsideClick) {
            document.addEventListener('click', this);
        }
    }
    removeEventListeners() {
        document.removeEventListener('click', this);
    }
    configureListeners() {
        this.host.open ? this.addEventListeners() : this.removeEventListeners();
    }
    handleEvent(event) {
        if (this.host.keepOpenOnOutsideClick) {
            return;
        }
        const path = event.composed ? event.composedPath() : [event.target];
        const target = this.config?.target || null;
        if (path.includes(this.host) || path.includes(target)) {
            return;
        }
        this.hide();
    }
    hide() {
        this.config?.hideCallback
            ? this.config.hideCallback.call(this.host)
            : this.host.hide();
    }
    update(config) {
        if (config) {
            this.config = { ...this.config, ...config };
        }
        this.configureListeners();
    }
    hostConnected() {
        this.configureListeners();
    }
    hostDisconnected() {
        this.removeEventListeners();
    }
}
export function addRootClickHandler(host, config) {
    return new RootClickController(host, config);
}
//# sourceMappingURL=root-click.js.map