{"version":3,"file":"root-scroll.js","sourceRoot":"","sources":["../../../../src/components/common/controllers/root-scroll.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ReactiveController, ReactiveControllerHost } from 'lit';\n\ntype RootScrollControllerConfig = {\n  hideCallback?: () => void;\n  resetListeners?: boolean;\n};\n\ntype RootScrollControllerHost = ReactiveControllerHost & {\n  open: boolean;\n  hide(): void;\n  scrollStrategy?: 'scroll' | 'close' | 'block';\n};\n\ntype ScrollRecord = { scrollTop: number; scrollLeft: number };\n\nclass RootScrollController implements ReactiveController {\n  private _cache: WeakMap<Element, ScrollRecord>;\n\n  constructor(\n    private readonly host: RootScrollControllerHost,\n    private config?: RootScrollControllerConfig\n  ) {\n    this._cache = new WeakMap();\n    this.host.addController(this);\n  }\n\n  private configureListeners() {\n    this.host.open ? this.addEventListeners() : this.removeEventListeners();\n  }\n\n  private hide() {\n    this.config?.hideCallback\n      ? this.config.hideCallback.call(this.host)\n      : this.host.hide();\n  }\n\n  private addEventListeners() {\n    if (this.host.scrollStrategy !== 'scroll') {\n      document.addEventListener('scroll', this, { capture: true });\n    }\n  }\n\n  private removeEventListeners() {\n    document.removeEventListener('scroll', this, { capture: true });\n    this._cache = new WeakMap();\n  }\n\n  public handleEvent(event: Event) {\n    this.host.scrollStrategy === 'close' ? this.hide() : this._block(event);\n  }\n\n  private _block(event: Event) {\n    event.preventDefault();\n    const element = event.target as Element;\n    const cache = this._cache;\n\n    if (!cache.has(element)) {\n      cache.set(element, {\n        scrollTop: element.firstElementChild?.scrollTop ?? element.scrollTop,\n        scrollLeft: element.firstElementChild?.scrollLeft ?? element.scrollLeft,\n      });\n    }\n\n    const record = cache.get(element)!;\n    Object.assign(element, record);\n\n    if (element.firstElementChild) {\n      Object.assign(element.firstElementChild, record);\n    }\n  }\n\n  public update(config?: RootScrollControllerConfig) {\n    if (config) {\n      this.config = { ...this.config, ...config };\n    }\n\n    if (config?.resetListeners) {\n      this.removeEventListeners();\n    }\n\n    this.configureListeners();\n  }\n\n  public hostConnected() {\n    this.configureListeners();\n  }\n\n  public hostDisconnected() {\n    this.removeEventListeners();\n  }\n}\n\nexport function addRootScrollHandler(\n  host: RootScrollControllerHost,\n  config?: RootScrollControllerConfig\n) {\n  return new RootScrollController(host, config);\n}\n"]}