{"version":3,"file":"root-click.js","sourceRoot":"","sources":["../../../../src/components/common/controllers/root-click.ts"],"names":[],"mappings":"AAcA,MAAM,mBAAmB;IACvB,YACmB,IAA6B,EACtC,MAAkC;QADzB,SAAI,GAAJ,IAAI,CAAyB;QACtC,WAAM,GAAN,MAAM,CAA4B;QAE1C,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAEO,iBAAiB;QACvB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC;YACtC,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IAEO,oBAAoB;QAC1B,QAAQ,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAEO,kBAAkB;QACxB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC1E,CAAC;IAEM,WAAW,CAAC,KAAiB;QAClC,IAAI,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC;YACrC,OAAO;QACT,CAAC;QAED,MAAM,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACpE,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,MAAM,IAAI,IAAI,CAAC;QAC3C,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;YACtD,OAAO;QACT,CAAC;QAED,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEO,IAAI;QACV,IAAI,CAAC,MAAM,EAAE,YAAY;YACvB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YAC1C,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAEM,MAAM,CAAC,MAAkC;QAC9C,IAAI,MAAM,EAAE,CAAC;YACX,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,EAAE,CAAC;QAC9C,CAAC;QACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAEM,aAAa;QAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAEM,gBAAgB;QACrB,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;CACF;AAED,MAAM,UAAU,mBAAmB,CACjC,IAA6B,EAC7B,MAAkC;IAElC,OAAO,IAAI,mBAAmB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAC/C,CAAC","sourcesContent":["import type { ReactiveController, ReactiveControllerHost } from 'lit';\n\ntype RootClickControllerConfig = {\n  hideCallback?: () => void;\n  target?: HTMLElement;\n};\n\ntype RootClickControllerHost = ReactiveControllerHost &\n  HTMLElement & {\n    open: boolean;\n    keepOpenOnOutsideClick?: boolean;\n    hide(): void;\n  };\n\nclass RootClickController implements ReactiveController {\n  constructor(\n    private readonly host: RootClickControllerHost,\n    private config?: RootClickControllerConfig\n  ) {\n    this.host.addController(this);\n  }\n\n  private addEventListeners() {\n    if (!this.host.keepOpenOnOutsideClick) {\n      document.addEventListener('click', this);\n    }\n  }\n\n  private removeEventListeners() {\n    document.removeEventListener('click', this);\n  }\n\n  private configureListeners() {\n    this.host.open ? this.addEventListeners() : this.removeEventListeners();\n  }\n\n  public handleEvent(event: MouseEvent) {\n    if (this.host.keepOpenOnOutsideClick) {\n      return;\n    }\n\n    const path = event.composed ? event.composedPath() : [event.target];\n    const target = this.config?.target || null;\n    if (path.includes(this.host) || path.includes(target)) {\n      return;\n    }\n\n    this.hide();\n  }\n\n  private hide() {\n    this.config?.hideCallback\n      ? this.config.hideCallback.call(this.host)\n      : this.host.hide();\n  }\n\n  public update(config?: RootClickControllerConfig) {\n    if (config) {\n      this.config = { ...this.config, ...config };\n    }\n    this.configureListeners();\n  }\n\n  public hostConnected() {\n    this.configureListeners();\n  }\n\n  public hostDisconnected() {\n    this.removeEventListeners();\n  }\n}\n\nexport function addRootClickHandler(\n  host: RootClickControllerHost,\n  config?: RootClickControllerConfig\n) {\n  return new RootClickController(host, config);\n}\n"]}