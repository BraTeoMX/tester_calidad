{"version":3,"file":"alert.js","sourceRoot":"","sources":["../../../../src/components/common/mixins/alert.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\n\nimport type { addAnimationController } from '../../../animations/player.js';\nimport { fadeIn, fadeOut } from '../../../animations/presets/fade/index.js';\nimport { watch } from '../decorators/watch.js';\n\n// It'd be better to have this as a mixin rather than a base class once the analyzer\n// knows how to resolve multiple mixin chains\n\nexport abstract class IgcBaseAlertLikeComponent extends LitElement {\n  private _internals: ElementInternals;\n  protected _autoHideTimeout?: number;\n\n  protected declare abstract _animationPlayer: ReturnType<\n    typeof addAnimationController\n  >;\n\n  /**\n   * Whether the component is in shown state.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public open = false;\n\n  /**\n   * Determines the duration in ms in which the component will be visible.\n   * @attr display-time\n   */\n  @property({ type: Number, attribute: 'display-time' })\n  public displayTime = 4000;\n\n  /**\n   * Determines whether the component should close after the `displayTime` is over.\n   * @attr keep-open\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'keep-open' })\n  public keepOpen = false;\n\n  /**\n   * Sets the position of the component in the viewport.\n   * @attr\n   */\n  @property({ reflect: true })\n  public position: 'bottom' | 'middle' | 'top' = 'bottom';\n\n  @watch('displayTime', { waitUntilFirstUpdate: true })\n  protected displayTimeChange() {\n    this.setAutoHideTimer();\n  }\n\n  @watch('keepOpen', { waitUntilFirstUpdate: true })\n  protected keepOpenChange() {\n    clearTimeout(this._autoHideTimeout);\n  }\n\n  constructor() {\n    super();\n    this._internals = this.attachInternals();\n\n    this._internals.role = 'status';\n    this._internals.ariaLive = 'polite';\n  }\n\n  private async toggleAnimation(state: 'open' | 'close') {\n    const animation = state === 'open' ? fadeIn : fadeOut;\n\n    const [_, event] = await Promise.all([\n      this._animationPlayer.stopAll(),\n      this._animationPlayer.play(animation()),\n    ]);\n\n    return event.type === 'finish';\n  }\n\n  private setAutoHideTimer() {\n    clearTimeout(this._autoHideTimeout);\n    if (this.open && this.displayTime > 0 && !this.keepOpen) {\n      this._autoHideTimeout = setTimeout(() => this.hide(), this.displayTime);\n    }\n  }\n\n  /** Opens the component. */\n  public async show() {\n    if (this.open) {\n      return;\n    }\n\n    this.open = true;\n    await this.toggleAnimation('open');\n    this.setAutoHideTimer();\n  }\n\n  /** Closes the component. */\n  public async hide() {\n    if (!this.open) {\n      return;\n    }\n\n    clearTimeout(this._autoHideTimeout);\n    await this.toggleAnimation('close');\n    this.open = false;\n  }\n\n  /** Toggles the open state of the component. */\n  public toggle() {\n    this.open ? this.hide() : this.show();\n  }\n}\n"]}