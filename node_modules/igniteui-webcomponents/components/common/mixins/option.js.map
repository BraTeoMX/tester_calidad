{"version":3,"file":"option.js","sourceRoot":"","sources":["../../../../src/components/common/mixins/option.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,QAAQ,EAAE,kBAAkB,EAAE,MAAM,mBAAmB,CAAC;AAEjE,MAAM,OAAgB,0BAA2B,SAAQ,UAAU;IAWjE,IAAc,gBAAgB;QAC5B,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAChE,CAAC;IAOD,IAAW,MAAM,CAAC,KAAc;QAC9B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,IAAW,MAAM;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAOD,IAAW,QAAQ,CAAC,KAAc;QAChC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;IACrD,CAAC;IAED,IAAW,QAAQ;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAOD,IAAW,QAAQ,CAAC,KAAc;QAChC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QACnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC9B,CAAC;IAED,IAAW,QAAQ;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IASD,IAAW,KAAK,CAAC,KAAa;QAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,IAAW,KAAK;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC;IAC3D,CAAC;IAED;QACE,KAAK,EAAE,CAAC;QAtEA,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAClB,cAAS,GAAG,KAAK,CAAC;QAqE1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACzC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC;IAClC,CAAC;IAEe,iBAAiB;QAG/B,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;IACvB,CAAC;IAEkB,MAAM;QACvB,OAAO,IAAI,CAAA;;;;;;;;;;KAUV,CAAC;IACJ,CAAC;CACF;AAzFW;IADT,kBAAkB,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;4DACF;AAWpC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;wDAG1C;AAWD;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;0DAI1C;AAWD;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;0DAK1C;AAaD;IADC,QAAQ,EAAE;uDAGV","sourcesContent":["import { LitElement, html } from 'lit';\nimport { property, queryAssignedNodes } from 'lit/decorators.js';\n\nexport abstract class IgcBaseOptionLikeComponent extends LitElement {\n  protected _internals: ElementInternals;\n\n  protected _active = false;\n  protected _disabled = false;\n  protected _selected = false;\n  protected _value!: string;\n\n  @queryAssignedNodes({ flatten: true })\n  protected _content!: Array<Element>;\n\n  protected get _contentSlotText() {\n    return this._content.map((node) => node.textContent).join('');\n  }\n\n  /**\n   * Whether the item is active.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public set active(value: boolean) {\n    this._active = Boolean(value);\n  }\n\n  public get active() {\n    return this._active;\n  }\n\n  /**\n   * Whether the item is disabled.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public set disabled(value: boolean) {\n    this._disabled = Boolean(value);\n    this._internals.ariaDisabled = `${this._disabled}`;\n  }\n\n  public get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * Whether the item is selected.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public set selected(value: boolean) {\n    this._selected = Boolean(value);\n    this._internals.ariaSelected = `${this._selected}`;\n    this.active = this.selected;\n  }\n\n  public get selected() {\n    return this._selected;\n  }\n\n  /**\n   * The current value of the item.\n   * If not specified, the element's text content is used.\n   *\n   * @attr\n   */\n  @property()\n  public set value(value: string) {\n    this._value = value;\n  }\n\n  public get value(): string {\n    return this._value ? this._value : this._contentSlotText;\n  }\n\n  constructor() {\n    super();\n    this._internals = this.attachInternals();\n    this._internals.role = 'option';\n  }\n\n  public override connectedCallback(): void {\n    // R.K. Workaround for Axe accessibility unit tests.\n    // I guess it does not support ElementInternals ARIAMixin state yet\n    super.connectedCallback();\n    this.role = 'option';\n  }\n\n  protected override render() {\n    return html`\n      <section part=\"prefix\">\n        <slot name=\"prefix\"></slot>\n      </section>\n      <section part=\"content\">\n        <slot></slot>\n      </section>\n      <section part=\"suffix\">\n        <slot name=\"suffix\"></slot>\n      </section>\n    `;\n  }\n}\n"]}