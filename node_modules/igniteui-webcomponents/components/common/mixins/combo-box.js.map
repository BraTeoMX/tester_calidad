{"version":3,"file":"combo-box.js","sourceRoot":"","sources":["../../../../src/components/common/mixins/combo-box.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AACjC,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE7C,OAAO,EAAE,SAAS,EAAE,MAAM,YAAY,CAAC;AAUvC,MAAM,OAAgB,4BAA6B,SAAQ,UAAU;IAArE;;QAcS,qBAAgB,GAAG,KAAK,CAAC;QAWzB,2BAAsB,GAAG,KAAK,CAAC;QAO/B,SAAI,GAAG,KAAK,CAAC;IAkEtB,CAAC;IAhEW,WAAW;QACnB,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;IAC5D,CAAC;IAES,UAAU;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC;IAES,WAAW;QACnB,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;IAC5D,CAAC;IAES,UAAU;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC;IAES,iBAAiB;QACzB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAES,KAAK,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK;QACrC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;YACrD,OAAO,KAAK,CAAC;QACf,CAAC;QAED,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAElB,IAAI,SAAS,EAAE,CAAC;YACd,MAAM,IAAI,CAAC,cAAc,CAAC;YAC1B,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;QAC3B,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAES,KAAK,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK;QACrC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;YACpD,OAAO,KAAK,CAAC;QACf,CAAC;QAED,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,SAAS,EAAE,CAAC;YACd,MAAM,IAAI,CAAC,cAAc,CAAC;YAC1B,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;QAC3B,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAGM,IAAI;QACT,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAGM,IAAI;QACT,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAGM,MAAM;QACX,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IACxC,CAAC;CACF;AApFQ;IADN,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,qBAAqB,EAAE,CAAC;sEAC7C;AAWzB;IALN,QAAQ,CAAC;QACR,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,IAAI;QACb,SAAS,EAAE,4BAA4B;KACxC,CAAC;4EACoC;AAO/B;IADN,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;0DACvB;AAoEtB,MAAM,UAAU,QAAQ,CAAwB,IAAU,EAAE,OAAe;IACzE,OAAO,SAAS,CAAI,IAAI,EAAE,cAAc,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;AAC7E,CAAC;AAED,MAAM,UAAU,cAAc,CAC5B,IAAU,EACV,OAAe;IAEf,OAAO,SAAS,CACd,IAAI,EACJ,cAAc,EACd,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAClD,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,iBAAiB,CAE/B,KAAU,EAAE,IAAO;IACnB,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAEpC,KAAK,IAAI,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QAChD,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YACvB,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;IACH,CAAC;IAED,OAAO,KAAK,CAAC,OAAO,CAAC,CAAC;AACxB,CAAC;AAED,MAAM,UAAU,qBAAqB,CAEnC,KAAU,EAAE,IAAO;IACnB,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAEpC,KAAK,IAAI,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;QACtC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YACvB,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;IACH,CAAC;IAED,OAAO,KAAK,CAAC,OAAO,CAAC,CAAC;AACxB,CAAC;AAED,MAAM,UAAU,wBAAwB,CAEtC,KAAU;IACV,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;IAE1E,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;QACzB,IAAI,IAAI,KAAK,YAAY,EAAE,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;IACH,CAAC;IAED,OAAO,YAAY,CAAC;AACtB,CAAC","sourcesContent":["import { LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\n\nimport { iterNodes } from '../util.js';\nimport type { UnpackCustomEvent } from './event-emitter.js';\n\ninterface IgcBaseComboBoxEventMap {\n  igcOpening: CustomEvent<void>;\n  igcOpened: CustomEvent<void>;\n  igcClosing: CustomEvent<void>;\n  igcClosed: CustomEvent<void>;\n}\n\nexport abstract class IgcBaseComboBoxLikeComponent extends LitElement {\n  public declare emitEvent: <\n    K extends keyof IgcBaseComboBoxEventMap,\n    D extends UnpackCustomEvent<IgcBaseComboBoxEventMap[K]>,\n  >(\n    event: K,\n    eventInitDict?: CustomEventInit<D>\n  ) => boolean;\n\n  /**\n   * Whether the component dropdown should be kept open on selection.\n   * @attr keep-open-on-select\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'keep-open-on-select' })\n  public keepOpenOnSelect = false;\n\n  /**\n   * Whether the component dropdown should be kept open on clicking outside of it.\n   * @attr keep-open-on-outside-click\n   */\n  @property({\n    type: Boolean,\n    reflect: true,\n    attribute: 'keep-open-on-outside-click',\n  })\n  public keepOpenOnOutsideClick = false;\n\n  /**\n   * Sets the open state of the component.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public open = false;\n\n  protected emitClosing() {\n    return this.emitEvent('igcClosing', { cancelable: true });\n  }\n\n  protected emitClosed() {\n    return this.emitEvent('igcClosed');\n  }\n\n  protected emitOpening() {\n    return this.emitEvent('igcOpening', { cancelable: true });\n  }\n\n  protected emitOpened() {\n    return this.emitEvent('igcOpened');\n  }\n\n  protected handleAnchorClick() {\n    this.open ? this._hide(true) : this._show(true);\n  }\n\n  protected async _hide(emitEvent = false) {\n    if (!this.open || (emitEvent && !this.emitClosing())) {\n      return false;\n    }\n\n    this.open = false;\n\n    if (emitEvent) {\n      await this.updateComplete;\n      return this.emitClosed();\n    }\n\n    return false;\n  }\n\n  protected async _show(emitEvent = false) {\n    if (this.open || (emitEvent && !this.emitOpening())) {\n      return false;\n    }\n\n    this.open = true;\n\n    if (emitEvent) {\n      await this.updateComplete;\n      return this.emitOpened();\n    }\n\n    return false;\n  }\n\n  /** Shows the component. */\n  public show() {\n    this._show();\n  }\n\n  /** Hides the component. */\n  public hide() {\n    this._hide();\n  }\n\n  /** Toggles the open state of the component. */\n  public toggle() {\n    this.open ? this.hide() : this.show();\n  }\n}\n\nexport function getItems<T extends HTMLElement>(root: Node, tagName: string) {\n  return iterNodes<T>(root, 'SHOW_ELEMENT', (item) => item.matches(tagName));\n}\n\nexport function getActiveItems<T extends HTMLElement & { disabled: boolean }>(\n  root: Node,\n  tagName: string\n) {\n  return iterNodes<T>(\n    root,\n    'SHOW_ELEMENT',\n    (item) => item.matches(tagName) && !item.disabled\n  );\n}\n\nexport function getNextActiveItem<\n  T extends HTMLElement & { disabled: boolean },\n>(items: T[], from: T) {\n  const current = items.indexOf(from);\n\n  for (let i = current + 1; i < items.length; i++) {\n    if (!items[i].disabled) {\n      return items[i];\n    }\n  }\n\n  return items[current];\n}\n\nexport function getPreviousActiveItem<\n  T extends HTMLElement & { disabled: boolean },\n>(items: T[], from: T) {\n  const current = items.indexOf(from);\n\n  for (let i = current - 1; i >= 0; i--) {\n    if (!items[i].disabled) {\n      return items[i];\n    }\n  }\n\n  return items[current];\n}\n\nexport function setInitialSelectionState<\n  T extends HTMLElement & { selected: boolean },\n>(items: T[]) {\n  const lastSelected = items.filter((item) => item.selected).at(-1) ?? null;\n\n  for (const item of items) {\n    if (item !== lastSelected) {\n      item.selected = false;\n    }\n  }\n\n  return lastSelected;\n}\n"]}