var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { property } from 'lit/decorators.js';
import { watch } from '../decorators/watch.js';
import { FormAssociatedMixin, } from './form-associated.js';
export function FormAssociatedRequiredMixin(superClass) {
    class FormAssociatedRequiredElement extends FormAssociatedMixin(superClass) {
        constructor() {
            super(...arguments);
            this.required = false;
        }
        requiredChange() {
            this.updateValidity();
            this.invalid = !this.checkValidity();
        }
    }
    __decorate([
        property({ type: Boolean, reflect: true })
    ], FormAssociatedRequiredElement.prototype, "required", void 0);
    __decorate([
        watch('required', { waitUntilFirstUpdate: true })
    ], FormAssociatedRequiredElement.prototype, "requiredChange", null);
    return FormAssociatedRequiredElement;
}
//# sourceMappingURL=form-associated-required.js.map