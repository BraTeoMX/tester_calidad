import { IgcProgressBaseComponent } from './base.js';
/**
 * A circular progress indicator used to express unspecified wait time or display
 * the length of a process.
 *
 * @element igc-circular-progress
 *
 * @slot - The text area container.
 * @slot gradient - Customize the progress bar in order to use a color gradient instead of a solid color. Accepts `igc-circular-gradient` elements.
 *
 * @csspart svg - The igc-circular-progress SVG element.
 * @csspart gradient_start - The igc-circular-progress linear-gradient start color.
 * @csspart gradient_end - The igc-circular-progress linear-gradient end color.
 * @csspart track - The igc-circular-progress ring track area.
 * @csspart fill - The igc-circular-progress indicator area.
 * @csspart label - The igc-circular-progress label.
 * @csspart value - The igc-circular-progress label value.
 * @csspart indeterminate - The igc-circular-progress indeterminate state.
 * @csspart primary - The igc-circular-progress primary state.
 * @csspart danger - The igc-circular-progress error state.
 * @csspart warning - The igc-circular-progress warning state.
 * @csspart info - The igc-circular-progress info state.
 * @csspart success - The igc-circular-progress success state.
 */
export default class IgcCircularProgressComponent extends IgcProgressBaseComponent {
    static readonly tagName = "igc-circular-progress";
    static styles: import("lit").CSSResult[];
    private static readonly increment;
    static register(): void;
    private _gradientId;
    private _assignedGradients;
    protected renderSvg(): import("lit-html").TemplateResult<2>;
    protected renderWrapper(): import("lit-html").TemplateResult<1>;
    protected render(): import("lit-html").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'igc-circular-progress': IgcCircularProgressComponent;
    }
}
