import { LitElement } from 'lit';
export declare abstract class IgcProgressBaseComponent extends LitElement {
    private __internals;
    private _ticker;
    protected assignedElements: Array<HTMLElement>;
    protected progressIndicator: Element;
    protected percentage: number;
    protected progress: number;
    /**
     * Maximum value of the control.
     * @attr
     */
    max: number;
    /**
     * The value of the control.
     * @attr
     */
    value: number;
    /**
     * The variant of the control.
     * @attr
     */
    variant: 'primary' | 'info' | 'success' | 'warning' | 'danger';
    /**
     * Animation duration in milliseconds.
     * @attr animation-duration
     */
    animationDuration: number;
    /**
     * The indeterminate state of the control.
     * @attr
     */
    indeterminate: boolean;
    /**
     * Shows/hides the label of the control.
     * @attr hide-label
     */
    hideLabel: boolean;
    /**
     * Format string for the default label of the control.
     * Placeholders:
     *  {0} - current value of the control.
     *  {1} - max value of the control.
     * @attr label-format
     */
    labelFormat: string;
    protected indeterminateChange(): void;
    protected maxChange(): void;
    protected valueChange(previous: number): void;
    constructor();
    protected createRenderRoot(): HTMLElement | DocumentFragment;
    protected updated(): void;
    private _updateARIA;
    private _setProgress;
    connectedCallback(): Promise<void>;
    protected cancelAnimations(): void;
    protected animateLabelTo(start: number, end: number): void;
    protected renderLabelFormat(): string;
    protected renderDefaultSlot(): import("lit-html").TemplateResult<1>;
    protected renderLabelText(): string;
}
