{"version":3,"file":"base.js","sourceRoot":"","sources":["../../../src/components/progress/base.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, nothing } from 'lit';\nimport {\n  property,\n  query,\n  queryAssignedElements,\n  state,\n} from 'lit/decorators.js';\n\nimport { watch } from '../common/decorators/watch.js';\nimport { asPercent, clamp, formatString } from '../common/util.js';\n\nexport abstract class IgcProgressBaseComponent extends LitElement {\n  private __internals: ElementInternals;\n  private _ticker!: number;\n\n  @queryAssignedElements()\n  protected assignedElements!: Array<HTMLElement>;\n\n  @query('[part~=\"fill\"]', true)\n  protected progressIndicator!: Element;\n\n  @state()\n  protected percentage = 0;\n\n  @state()\n  protected progress = 0;\n\n  /**\n   * Maximum value of the control.\n   * @attr\n   */\n  @property({ type: Number })\n  public max = 100;\n\n  /**\n   * The value of the control.\n   * @attr\n   */\n  @property({ type: Number })\n  public value = 0;\n\n  /**\n   * The variant of the control.\n   * @attr\n   */\n  @property({ reflect: true })\n  public variant: 'primary' | 'info' | 'success' | 'warning' | 'danger' =\n    'primary';\n\n  /**\n   * Animation duration in milliseconds.\n   * @attr animation-duration\n   */\n  @property({ type: Number, attribute: 'animation-duration' })\n  public animationDuration = 500;\n\n  /**\n   * The indeterminate state of the control.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: false })\n  public indeterminate = false;\n\n  /**\n   * Shows/hides the label of the control.\n   * @attr hide-label\n   */\n  @property({ type: Boolean, attribute: 'hide-label', reflect: false })\n  public hideLabel = false;\n\n  /**\n   * Format string for the default label of the control.\n   * Placeholders:\n   *  {0} - current value of the control.\n   *  {1} - max value of the control.\n   * @attr label-format\n   */\n  @property({ attribute: 'label-format' })\n  public labelFormat!: string;\n\n  @watch('indeterminate', { waitUntilFirstUpdate: true })\n  protected indeterminateChange() {\n    this.cancelAnimations();\n\n    if (!this.indeterminate) {\n      this._setProgress();\n      this.animateLabelTo(0, this.value);\n    }\n  }\n\n  @watch('max', { waitUntilFirstUpdate: true })\n  protected maxChange() {\n    this.max = Math.max(0, this.max);\n\n    if (this.value > this.max) {\n      this.value = this.max;\n    }\n\n    this._setProgress();\n\n    if (!this.indeterminate) {\n      cancelAnimationFrame(this._ticker);\n      this.animateLabelTo(this.max, this.value);\n    }\n  }\n\n  @watch('value', { waitUntilFirstUpdate: true })\n  protected valueChange(previous: number) {\n    this.value = clamp(this.value, 0, this.max);\n    this._setProgress();\n\n    if (!this.indeterminate) {\n      cancelAnimationFrame(this._ticker);\n      this.animateLabelTo(previous, this.value);\n    }\n  }\n\n  constructor() {\n    super();\n    this.__internals = this.attachInternals();\n\n    this.__internals.role = 'progressbar';\n    this.__internals.ariaValueMin = '0';\n  }\n\n  protected override createRenderRoot() {\n    const root = super.createRenderRoot();\n    root.addEventListener('slotchange', () => this.requestUpdate());\n    return root;\n  }\n\n  protected override updated() {\n    this._updateARIA();\n  }\n\n  private _updateARIA() {\n    const internals = this.__internals;\n    const text = this.labelFormat\n      ? this.renderLabelFormat()\n      : `${this.percentage}%`;\n\n    internals.ariaValueMax = `${this.max}`;\n    internals.ariaValueNow = this.indeterminate ? null : `${this.value}`;\n    internals.ariaValueText = this.indeterminate ? null : text;\n  }\n\n  private _setProgress() {\n    this.progress = this.value / this.max;\n  }\n\n  public override async connectedCallback() {\n    super.connectedCallback();\n\n    await this.updateComplete;\n    if (!this.indeterminate) {\n      requestAnimationFrame(() => {\n        this._setProgress();\n        this.animateLabelTo(0, this.value);\n      });\n    }\n  }\n\n  protected cancelAnimations() {\n    cancelAnimationFrame(this._ticker);\n    this.progressIndicator?.getAnimations().forEach((animation) => {\n      if (animation instanceof CSSTransition) {\n        animation.cancel();\n      }\n    });\n  }\n\n  protected animateLabelTo(start: number, end: number) {\n    let t0: number;\n\n    const tick = (t1: number) => {\n      t0 = t0 ?? t1;\n\n      const delta = Math.min(\n        (t1 - t0) / Math.max(this.animationDuration, 1),\n        1\n      );\n\n      this.percentage = Math.floor(\n        asPercent(delta * (end - start) + start, this.max)\n      );\n\n      if (delta < 1) {\n        this._ticker = requestAnimationFrame(tick);\n      } else {\n        cancelAnimationFrame(this._ticker);\n      }\n    };\n\n    requestAnimationFrame(tick);\n  }\n\n  protected renderLabelFormat() {\n    return formatString(this.labelFormat, this.value, this.max);\n  }\n\n  protected renderDefaultSlot() {\n    const hasNoLabel =\n      this.indeterminate || this.hideLabel || this.assignedElements.length;\n\n    return html`\n      <slot part=\"label\"></slot>\n      ${hasNoLabel\n        ? nothing\n        : html`<span part=\"label value\">${this.renderLabelText()}</span>`}\n    `;\n  }\n\n  protected renderLabelText() {\n    return this.labelFormat ? this.renderLabelFormat() : `${this.percentage}%`;\n  }\n}\n"]}