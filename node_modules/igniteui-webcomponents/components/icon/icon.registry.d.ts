export type IconCollection = {
    [name: string]: ParsedIcon;
};
type IconCallback = (name: string, collection: string) => void;
interface ParsedIcon {
    svg: string;
    title?: string;
}
export declare class IconsRegistry {
    private _parser;
    private collections;
    private listeners;
    constructor();
    subscribe(callback: IconCallback): void;
    unsubscribe(callback: IconCallback): void;
    private parseSVG;
    register(name: string, iconText: string, collection?: string): void;
    get(name: string, collection?: string): ParsedIcon | undefined;
    private getOrCreateCollection;
}
export declare function getIconRegistry(): IconsRegistry;
export declare function registerIcon(name: string, url: string, collection?: string): Promise<void>;
export declare function registerIconFromText(name: string, iconText: string, collection?: string): void;
export {};
