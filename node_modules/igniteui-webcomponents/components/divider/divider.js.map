{"version":3,"file":"divider.js","sourceRoot":"","sources":["../../../src/components/divider/divider.ts"],"names":[],"mappings":";;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,MAAM,EAAE,MAAM,oCAAoC,CAAC;AAC5D,OAAO,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAC;AACtE,OAAO,EAAE,MAAM,EAAE,MAAM,8BAA8B,CAAC;AACtD,OAAO,EAAE,MAAM,IAAI,MAAM,EAAE,MAAM,uCAAuC,CAAC;AACzE,OAAO,EAAE,GAAG,EAAE,MAAM,oBAAoB,CAAC;AAa1B,IAAM,mBAAmB,2BAAzB,MAAM,mBAAoB,SAAQ,UAAU;IAOlD,MAAM,CAAC,QAAQ;QACpB,iBAAiB,CAAC,qBAAmB,CAAC,CAAC;IACzC,CAAC;IASD,IAAW,QAAQ,CAAC,KAAc;QAChC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS;YAC9C,CAAC,CAAC,UAAU;YACZ,CAAC,CAAC,YAAY,CAAC;IACnB,CAAC;IAED,IAAW,QAAQ;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAiBD;QACE,KAAK,EAAE,CAAC;QAlCF,cAAS,GAAG,KAAK,CAAC;QAuBnB,WAAM,GAAG,KAAK,CAAC;QAQf,SAAI,GAAuB,OAAO,CAAC;QAIxC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAEzC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,WAAW,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS;YAC9C,CAAC,CAAC,UAAU;YACZ,CAAC,CAAC,YAAY,CAAC;IACnB,CAAC;IAEkB,MAAM;QACvB,OAAO,IAAI,CAAA,EAAE,CAAC;IAChB,CAAC;;AAvDsB,2BAAO,GAAG,aAAa,AAAhB,CAAiB;AACxB,0BAAM,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,AAAnB,CAAoB;AAgBjD;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;mDAM1C;AAWM;IADN,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;mDACrB;AAQf;IADN,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;iDACc;AA1CvB,mBAAmB;IADvC,MAAM,CAAC,GAAG,CAAC;GACS,mBAAmB,CAyDvC;eAzDoB,mBAAmB","sourcesContent":["import { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { registerComponent } from '../common/definitions/register.js';\nimport { styles } from './themes/divider.base.css.js';\nimport { styles as shared } from './themes/shared/divider.common.css.js';\nimport { all } from './themes/themes.js';\n\n/**\n * The igc-divider allows the content author to easily create a horizontal/vertical rule as a break between content to better organize information on a page.\n *\n * @element igc-divider\n *\n * @cssproperty --color - Sets the color of the divider.\n * @cssproperty --inset - Shrinks the divider by the given amount from the start. If `middle` is set it will shrink from both sides.\n *\n */\n\n@themes(all)\nexport default class IgcDividerComponent extends LitElement {\n  public static readonly tagName = 'igc-divider';\n  public static override styles = [styles, shared];\n\n  private _internals: ElementInternals;\n\n  /* blazorSuppress */\n  public static register() {\n    registerComponent(IgcDividerComponent);\n  }\n\n  private _vertical = false;\n\n  /**\n   * Whether to render a vertical divider line.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public set vertical(value: boolean) {\n    this._vertical = Boolean(value);\n    this._internals.ariaOrientation = this._vertical\n      ? 'vertical'\n      : 'horizontal';\n  }\n\n  public get vertical(): boolean {\n    return this._vertical;\n  }\n\n  /**\n   * When set and inset is provided, it will shrink the divider line from both sides.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public middle = false;\n\n  /**\n   * Whether to render a solid or a dashed divider line.\n   * @attr\n   */\n\n  @property({ reflect: true })\n  public type: 'solid' | 'dashed' = 'solid';\n\n  constructor() {\n    super();\n    this._internals = this.attachInternals();\n\n    this._internals.role = 'separator';\n    this._internals.ariaOrientation = this._vertical\n      ? 'vertical'\n      : 'horizontal';\n  }\n\n  protected override render() {\n    return html``;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-divider': IgcDividerComponent;\n  }\n}\n"]}