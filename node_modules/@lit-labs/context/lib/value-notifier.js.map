{"version":3,"file":"value-notifier.js","sources":["../src/lib/value-notifier.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ContextCallback} from './context-request-event.js';\n\n/**\n * A disposer function\n */\ntype Disposer = () => void;\n\n/**\n * A simple class which stores a value, and triggers registered callbacks when the\n * value is changed via its setter.\n *\n * An implementor might use other observable patterns such as MobX or Redux to get\n * behavior like this. But this is a pretty minimal approach that will likely work\n * for a number of use cases.\n */\nexport class ValueNotifier<T> {\n  private disposers: Map<ContextCallback<T>, Disposer> = new Map();\n\n  private _value!: T;\n  public get value(): T {\n    return this._value;\n  }\n  public set value(v: T) {\n    this.setValue(v);\n  }\n\n  public setValue(v: T, force = false) {\n    const update = force || !Object.is(v, this._value);\n    this._value = v;\n    if (update) {\n      this.updateObservers();\n    }\n  }\n\n  constructor(defaultValue?: T) {\n    if (defaultValue !== undefined) {\n      this.value = defaultValue;\n    }\n  }\n\n  updateObservers = (): void => {\n    for (const [callback, disposer] of this.disposers) {\n      callback(this._value, disposer);\n    }\n  };\n\n  addCallback(callback: ContextCallback<T>, subscribe?: boolean): void {\n    if (subscribe) {\n      if (!this.disposers.has(callback)) {\n        this.disposers.set(callback, () => {\n          this.disposers.delete(callback);\n        });\n      }\n      const disposer = this.disposers.get(callback)!;\n      callback(this.value, disposer);\n    } else {\n      callback(this.value);\n    }\n  }\n\n  clearCallbacks(): void {\n    this.disposers.clear();\n  }\n}\n"],"names":["ValueNotifier","constructor","defaultValue","this","disposers","Map","updateObservers","callback","disposer","_value","undefined","value","v","setValue","force","update","Object","is","addCallback","subscribe","has","set","delete","get","clearCallbacks","clear"],"mappings":";;;;;MAqBaA,EAmBXC,YAAYC,GAlBJC,KAAAC,UAA+C,IAAIC,IAwB3DF,KAAeG,gBAAG,KAChB,IAAK,MAAOC,EAAUC,KAAaL,KAAKC,UACtCG,EAASJ,KAAKM,EAAQD,EACvB,OARoBE,IAAjBR,IACFC,KAAKQ,MAAQT,EAEhB,CAnBUS,YACT,OAAOR,KAAKM,CACb,CACUE,UAAMC,GACfT,KAAKU,SAASD,EACf,CAEMC,SAASD,EAAME,GAAQ,GAC5B,MAAMC,EAASD,IAAUE,OAAOC,GAAGL,EAAGT,KAAKM,GAC3CN,KAAKM,EAASG,EACVG,GACFZ,KAAKG,iBAER,CAcDY,YAAYX,EAA8BY,GACxC,GAAIA,EAAW,CACRhB,KAAKC,UAAUgB,IAAIb,IACtBJ,KAAKC,UAAUiB,IAAId,GAAU,KAC3BJ,KAAKC,UAAUkB,OAAOf,EAAS,IAGnC,MAAMC,EAAWL,KAAKC,UAAUmB,IAAIhB,GACpCA,EAASJ,KAAKQ,MAAOH,EACtB,MACCD,EAASJ,KAAKQ,MAEjB,CAEDa,iBACErB,KAAKC,UAAUqB,OAChB"}