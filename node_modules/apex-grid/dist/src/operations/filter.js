import DataOperation from './base.js';
export default class FilterDataOperation extends DataOperation {
    resolveFilter(record, expr) {
        const condition = expr.condition;
        return condition.logic(
        // XXX: Types
        // @ts-expect-error - resolve
        this.resolveValue(record, expr.key), expr.searchTerm, expr.caseSensitive);
    }
    match(record, ands, ors) {
        for (const or of ors) {
            if (this.resolveFilter(record, or)) {
                return this.match(record, ands.filter(f => f.key !== or.key), []);
            }
        }
        return ands.every(f => this.resolveFilter(record, f));
    }
    apply(data, state) {
        if (state.empty)
            return data;
        const { ands, ors } = state;
        return data.filter(record => this.match(record, ands, ors));
    }
}
//# sourceMappingURL=filter.js.map