import type { Keys } from '../internal/types.js';
export default abstract class DataOperation<T, K extends Keys<T> = Keys<T>> {
    protected resolveValue(record: T, key: K): T[K];
    protected resolveCase<U = T[K]>(value: U, caseSensitive?: boolean): U;
    abstract apply(...args: unknown[]): T[];
}
//# sourceMappingURL=base.d.ts.map