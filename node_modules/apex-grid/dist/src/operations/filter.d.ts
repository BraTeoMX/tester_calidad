import DataOperation from './base.js';
import type { FilterState } from './filter/state.js';
import type { FilterExpression } from './filter/types.js';
export default class FilterDataOperation<T extends object> extends DataOperation<T> {
    protected resolveFilter(record: T, expr: FilterExpression<T>): boolean;
    protected match(record: T, ands: FilterExpression<T>[], ors: FilterExpression<T>[]): boolean;
    apply(data: T[], state: FilterState<T>): T[];
}
//# sourceMappingURL=filter.d.ts.map