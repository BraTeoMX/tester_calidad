import { LitElement } from 'lit';
import type { ApexCellContext, ColumnConfiguration, PropertyType } from '../internal/types.js';
import type ApexGridRow from './row.js';
/**
 * Component representing a DOM cell of the Apex grid.
 */
export default class ApexGridCell<T extends object> extends LitElement {
    static get is(): "apex-grid-cell";
    static styles: import("lit").CSSResult;
    static register(): void;
    /**
     * The value which will be rendered by the component.
     */
    value: PropertyType<T>;
    /**
     * A reference to the column configuration object.
     */
    column: ColumnConfiguration<T>;
    /**
     * Indicates whether this is the active cell in the grid.
     *
     */
    active: boolean;
    /**
     * The parent row component holding this cell.
     */
    row: ApexGridRow<T>;
    protected get context(): ApexCellContext<T>;
    protected render(): unknown;
}
declare global {
    interface HTMLElementTagNameMap {
        [ApexGridCell.is]: ApexGridCell<object>;
    }
}
//# sourceMappingURL=cell.d.ts.map