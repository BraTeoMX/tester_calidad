var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { html, LitElement, nothing } from 'lit';
import { property, queryAll } from 'lit/decorators.js';
import { map } from 'lit/directives/map.js';
import { GRID_ROW_TAG } from '../internal/tags.js';
import { registerComponent } from '../internal/register.js';
import ApexGridCell from './cell.js';
import { styles } from '../styles/body-row/body-row-styles.css.js';
/**
 * Component representing the DOM row in the Apex grid.
 */
class ApexGridRow extends LitElement {
    constructor() {
        super(...arguments);
        this.columns = [];
        this.index = -1;
    }
    static get is() {
        return GRID_ROW_TAG;
    }
    static register() {
        registerComponent(this, [ApexGridCell]);
    }
    get cells() {
        return Array.from(this._cells);
    }
    connectedCallback() {
        super.connectedCallback();
        this.setAttribute('exportparts', 'cell');
    }
    render() {
        const { column: key, row: index } = this.activeNode;
        return html `
      ${map(this.columns, column => column.hidden
            ? nothing
            : html `<apex-grid-cell
              part="cell"
              .active=${key === column.key && index === this.index}
              .column=${column}
              .row=${this}
              .value=${this.data[column.key]}
            ></apex-grid-cell>`)}
    `;
    }
}
ApexGridRow.styles = styles;
__decorate([
    queryAll(ApexGridCell.is)
], ApexGridRow.prototype, "_cells", void 0);
__decorate([
    property({ attribute: false })
], ApexGridRow.prototype, "data", void 0);
__decorate([
    property({ attribute: false })
], ApexGridRow.prototype, "columns", void 0);
__decorate([
    property({ attribute: false })
], ApexGridRow.prototype, "activeNode", void 0);
__decorate([
    property({ attribute: false, type: Number })
], ApexGridRow.prototype, "index", void 0);
export default ApexGridRow;
//# sourceMappingURL=row.js.map