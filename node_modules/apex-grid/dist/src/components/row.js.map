{"version":3,"file":"row.js","sourceRoot":"","sources":["../../../src/components/row.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AAChD,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AACvD,OAAO,EAAE,GAAG,EAAE,MAAM,uBAAuB,CAAC;AAC5C,OAAO,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AACnD,OAAO,EAAE,iBAAiB,EAAE,MAAM,yBAAyB,CAAC;AAE5D,OAAO,YAAY,MAAM,WAAW,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,2CAA2C,CAAC;AAEnE;;GAEG;AACH,MAAqB,WAA8B,SAAQ,UAAU;IAArE;;QAiBS,YAAO,GAAkC,EAAE,CAAC;QAU5C,UAAK,GAAG,CAAC,CAAC,CAAC;IAwBpB,CAAC;IAlDQ,MAAM,KAAK,EAAE;QAClB,OAAO,YAAY,CAAC;IACtB,CAAC;IAGM,MAAM,CAAC,QAAQ;QACpB,iBAAiB,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;IAC1C,CAAC;IAWD,IAAW,KAAK;QACd,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAQe,iBAAiB;QAC/B,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IAC3C,CAAC;IAEkB,MAAM;QACvB,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QAEpD,OAAO,IAAI,CAAA;QACP,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,CAC3B,MAAM,CAAC,MAAM;YACX,CAAC,CAAC,OAAO;YACT,CAAC,CAAC,IAAI,CAAA;;wBAEQ,GAAG,KAAK,MAAM,CAAC,GAAG,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK;wBAC1C,MAAM;qBACT,IAAsB;uBACpB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;+BACb,CACxB;KACF,CAAC;IACJ,CAAC;;AA9CsB,kBAAM,GAAG,MAAM,AAAT,CAAU;AAO7B;IADT,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC;2CACqB;AAGxC;IADN,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;yCACf;AAGT;IADN,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;4CACoB;AAO5C;IADN,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;+CACG;AAG3B;IADN,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;0CAC3B;eA3BC,WAAW","sourcesContent":["import { html, LitElement, nothing } from 'lit';\nimport { property, queryAll } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\nimport { GRID_ROW_TAG } from '../internal/tags.js';\nimport { registerComponent } from '../internal/register.js';\nimport type { ActiveNode, ColumnConfiguration } from '../internal/types.js';\nimport ApexGridCell from './cell.js';\nimport { styles } from '../styles/body-row/body-row-styles.css.js';\n\n/**\n * Component representing the DOM row in the Apex grid.\n */\nexport default class ApexGridRow<T extends object> extends LitElement {\n  public static get is() {\n    return GRID_ROW_TAG;\n  }\n  public static override styles = styles;\n\n  public static register() {\n    registerComponent(this, [ApexGridCell]);\n  }\n\n  @queryAll(ApexGridCell.is)\n  protected _cells!: NodeListOf<ApexGridCell<T>>;\n\n  @property({ attribute: false })\n  public data!: T;\n\n  @property({ attribute: false })\n  public columns: Array<ColumnConfiguration<T>> = [];\n\n  public get cells() {\n    return Array.from(this._cells);\n  }\n\n  @property({ attribute: false })\n  public activeNode!: ActiveNode<T>;\n\n  @property({ attribute: false, type: Number })\n  public index = -1;\n\n  public override connectedCallback(): void {\n    super.connectedCallback();\n    this.setAttribute('exportparts', 'cell');\n  }\n\n  protected override render() {\n    const { column: key, row: index } = this.activeNode;\n\n    return html`\n      ${map(this.columns, column =>\n        column.hidden\n          ? nothing\n          : html`<apex-grid-cell\n              part=\"cell\"\n              .active=${key === column.key && index === this.index}\n              .column=${column}\n              .row=${this as ApexGridRow<T>}\n              .value=${this.data[column.key]}\n            ></apex-grid-cell>`,\n      )}\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    [ApexGridRow.is]: ApexGridRow<object>;\n  }\n}\n"]}