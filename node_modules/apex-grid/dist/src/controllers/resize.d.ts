import { nothing, ReactiveController } from 'lit';
import ApexGridHeader from '../components/header.js';
import type { ColumnConfiguration, GridHost } from '../internal/types.js';
export declare class ResizeController<T extends object> implements ReactiveController {
    #private;
    protected host: GridHost<T>;
    constructor(host: GridHost<T>);
    indicatorActive: boolean;
    indicatorOffset: number;
    /**
     * Begins resizing a column by showing and positioning the resize indicator in relation to the column.
     *
     * @param header the
     */
    start(header: ApexGridHeader<T>): void;
    /**
     * Stops and resets the resizing state.
     */
    stop(): void;
    resize(column: ColumnConfiguration<T>, width: number, sizerOffset?: number): void;
    autosize(column: ColumnConfiguration<T>, header: ApexGridHeader<T>): Promise<void>;
    hostConnected(): void;
    /**
     * Renders the resize indicator in the grid.
     */
    renderIndicator(): typeof nothing | import("lit-html").TemplateResult<1>;
}
//# sourceMappingURL=resize.d.ts.map