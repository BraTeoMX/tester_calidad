import { ReactiveController } from 'lit';
import type { ColumnConfiguration, GridHost, Keys } from '../internal/types.js';
import type { SortExpression, SortState } from '../operations/sort/types.js';
export declare class SortController<T extends object> implements ReactiveController {
    #private;
    protected host: GridHost<T>;
    constructor(host: GridHost<T>);
    state: SortState<T>;
    sortFromHeaderClick(column: ColumnConfiguration<T>): Promise<void>;
    prepareExpression({ key, sort: options }: ColumnConfiguration<T>): SortExpression<T>;
    reset(key?: Keys<T>): void;
    protected _sort(expressions: SortExpression<T> | SortExpression<T>[]): void;
    sort(expressions: SortExpression<T> | SortExpression<T>[]): void;
    hostConnected(): void;
}
//# sourceMappingURL=sort.d.ts.map