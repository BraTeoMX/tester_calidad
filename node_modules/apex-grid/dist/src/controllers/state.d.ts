import { ReactiveController } from 'lit';
import { FilterController } from './filter.js';
import { NavigationController } from './navigation.js';
import { SortController } from './sort.js';
import { ResizeController } from './resize.js';
import type { ActiveNode, GridHost } from '../internal/types.js';
export declare class StateController<T extends object> implements ReactiveController {
    host: GridHost<T>;
    sorting: SortController<T>;
    filtering: FilterController<T>;
    navigation: NavigationController<T>;
    resizing: ResizeController<T>;
    get active(): ActiveNode<T>;
    set active(node: ActiveNode<T>);
    get headerRow(): import("../components/header-row.js").default<T>;
    get scrollContainer(): import("../components/virtualizer.js").default;
    constructor(host: GridHost<T>);
    protected init(): void;
    hostConnected(): void;
    hostUpdate(): void;
}
export declare const gridStateContext: {
    __context__: StateController<any>;
};
//# sourceMappingURL=state.d.ts.map