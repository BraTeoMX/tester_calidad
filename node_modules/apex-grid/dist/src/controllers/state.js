import { createContext } from '@lit-labs/context';
import { FilterController } from './filter.js';
import { NavigationController } from './navigation.js';
import { SortController } from './sort.js';
import { ResizeController } from './resize.js';
export class StateController {
    get active() {
        return this.navigation.active;
    }
    set active(node) {
        this.navigation.active = node;
    }
    get headerRow() {
        // @ts-expect-error - Protected member access
        return this.host.headerRow;
    }
    get scrollContainer() {
        // @ts-expect-error - Protected member access
        return this.host.scrollContainer;
    }
    constructor(host) {
        this.host = host;
        this.host.addController(this);
        this.init();
    }
    init() {
        this.sorting = new SortController(this.host);
        this.filtering = new FilterController(this.host);
        this.navigation = new NavigationController(this.host);
        this.resizing = new ResizeController(this.host);
    }
    hostConnected() { }
    hostUpdate() {
        var _a, _b;
        (_a = this.headerRow) === null || _a === void 0 ? void 0 : _a.requestUpdate();
        (_b = this.scrollContainer) === null || _b === void 0 ? void 0 : _b.requestUpdate();
    }
}
export const gridStateContext = createContext('gridStateController');
//# sourceMappingURL=state.js.map