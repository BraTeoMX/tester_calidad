{"version":3,"file":"dom.js","sourceRoot":"","sources":["../../../src/controllers/dom.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,IAAI,EAAsB,MAAM,KAAK,CAAC;AAC/C,OAAO,EAAa,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAGlE,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AACzD,OAAO,EAAE,iBAAiB,EAAE,MAAM,8BAA8B,CAAC;AAGjE,MAAM,OAAO,iBAAiB;IAC5B,YAAsB,IAAiB,EAAY,KAAyB;QAAtD,SAAI,GAAJ,IAAI,CAAa;QAAY,UAAK,GAAL,KAAK,CAAoB;QAI5E,yCAAe,GAAG,EAAE;YAClB,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;QAC3C,CAAC,EAAC;QAOK,gBAAW,GAAc,EAAE,CAAC;QAE5B,gBAAW,GAA0B,CAAC,IAAO,EAAE,KAAa,EAAE,EAAE;YACrE,OAAO,IAAI,CAAA;;cAED,QAAQ,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE,CAAC;eACnE,KAAK;oBACA,IAAI,CAAC,KAAK,CAAC,MAAM;cACvB,IAAI;iBACD,IAAI,CAAC,IAAI,CAAC,OAAO;sBACZ,CAAC;QACrB,CAAC,CAAC;QAvBA,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAMD,IAAW,SAAS;QAClB,4CAA4C;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;IACnC,CAAC;IAeM,KAAK,CAAC,aAAa;QACxB,iBAAiB,EAAE,CAAC;QACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,qFAAqF;QACrF,mBAAmB;QACnB,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;QAC/B,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,uBAAA,IAAI,sCAAa,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IAC1F,CAAC;IAEM,UAAU;QACf,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAEM,eAAe;QACpB,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1F,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,oBAAoB,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC;IACjE,CAAC;IAES,kBAAkB;QAC1B,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1D,CAAC;IAEM,kBAAkB,CAAC,KAAa;QACrC,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAClC,OAAO,GAAG,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IACjD,CAAC;CACF","sourcesContent":["import { html, ReactiveController } from 'lit';\nimport { StyleInfo, styleMap } from 'lit/directives/style-map.js';\nimport { RenderItemFunction } from '@lit-labs/virtualizer/virtualize.js';\nimport { StateController } from './state.js';\nimport { applyColumnWidths } from '../internal/utils.js';\nimport { registerGridIcons } from '../internal/icon-registry.js';\nimport type { GridHost } from '../internal/types.js';\n\nexport class GridDOMController<T extends object> implements ReactiveController {\n  constructor(protected host: GridHost<T>, protected state: StateController<T>) {\n    this.host.addController(this);\n  }\n\n  #initialSize = () => {\n    setTimeout(() => this.setScrollOffset());\n  };\n\n  public get container() {\n    // @ts-expect-error: protected member access\n    return this.host.scrollContainer;\n  }\n\n  public columnSizes: StyleInfo = {};\n\n  public rowRenderer: RenderItemFunction<T> = (data: T, index: number) => {\n    return html`<apex-grid-row\n      part=\"row\"\n      style=${styleMap({ ...this.columnSizes, ...this.getActiveRowStyles(index) })}\n      .index=${index}\n      .activeNode=${this.state.active}\n      .data=${data}\n      .columns=${this.host.columns}\n    ></apex-grid-row>`;\n  };\n\n  public async hostConnected() {\n    registerGridIcons();\n    this.setGridColumnSizes();\n    // Wait for the initial paint of the virtualizer and recalculate the scrollbar offset\n    // for the next one\n    await this.host.updateComplete;\n    this.container.addEventListener('visibilityChanged', this.#initialSize, { once: true });\n  }\n\n  public hostUpdate(): void {\n    this.setScrollOffset();\n    this.setGridColumnSizes();\n  }\n\n  public setScrollOffset() {\n    const size = this.container ? this.container.offsetWidth - this.container.clientWidth : 0;\n    this.host.style.setProperty('--scrollbar-offset', `${size}px`);\n  }\n\n  protected setGridColumnSizes() {\n    this.columnSizes = applyColumnWidths(this.host.columns);\n  }\n\n  public getActiveRowStyles(index: number): StyleInfo {\n    const { row } = this.state.active;\n    return row === index ? { 'z-index': '3' } : {};\n  }\n}\n"]}