import { BooleanOperands } from '../operations/filter/operands/boolean.js';
import { NumberOperands } from '../operations/filter/operands/number.js';
import { StringOperands } from '../operations/filter/operands/string.js';
// TODO: Revise if this is needed
export function applyColumnWidths(columns) {
    return {
        'grid-template-columns': columns
            .filter(each => !each.hidden)
            .map(({ width }) => width !== null && width !== void 0 ? width : 'minmax(136px, 1fr)')
            .join(' '),
    };
}
export function autoGenerateColumns(grid) {
    var _a;
    if (grid.autoGenerate && grid.columns.length < 1) {
        const record = (_a = grid.data[0]) !== null && _a !== void 0 ? _a : {};
        grid.columns = Object.entries(record).map(([key, value]) => {
            const type = typeof value === 'boolean' ? 'boolean' : typeof value === 'number' ? 'number' : 'string';
            return { key, type };
        });
    }
}
export function asArray(value) {
    return Array.isArray(value) ? value : [value];
}
export function getFilterOperandsFor(column) {
    // Check for custom class in the filter config
    switch (column.type) {
        case 'boolean':
            return BooleanOperands;
        case 'number':
            return NumberOperands;
        default:
            return StringOperands;
    }
}
//# sourceMappingURL=utils.js.map