{"version":3,"file":"event-emitter.js","sourceRoot":"","sources":["../../../../src/internal/mixins/event-emitter.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAIjC,MAAM,OAAO,gBAAoB,SAAQ,UAAU;IAMjC,gBAAgB,CAC9B,IAAY,EACZ,QAA4C,EAC5C,OAA2C;QAE3C,KAAK,CAAC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IAClD,CAAC;IAOe,mBAAmB,CACjC,IAAY,EACZ,QAA4C,EAC5C,OAAwC;QAExC,KAAK,CAAC,mBAAmB,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IACrD,CAAC;IACM,SAAS,CACd,IAAO,EACP,aAAkC;QAElC,OAAO,IAAI,CAAC,aAAa,CACvB,IAAI,WAAW,CACb,IAAc,EACd,MAAM,CAAC,MAAM,CACX;YACE,OAAO,EAAE,IAAI;YACb,UAAU,EAAE,KAAK;YACjB,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,EAAE;SACX,EACD,aAAa,CACd,CACF,CACF,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { LitElement } from 'lit';\n\nexport type UnpackCustomEvent<T> = T extends CustomEvent<infer U> ? U : never;\n\nexport class EventEmitterBase<E> extends LitElement {\n  public override addEventListener<K extends keyof M, M extends E & HTMLElementEventMap>(\n    type: K,\n    listener: (this: HTMLElement, ev: M[K]) => any,\n    options?: boolean | AddEventListenerOptions,\n  ): void;\n  public override addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ): void {\n    super.addEventListener(type, listener, options);\n  }\n\n  public override removeEventListener<K extends keyof M, M extends E & HTMLElementEventMap>(\n    type: K,\n    listener: (this: HTMLElement, ev: M[K]) => any,\n    options?: boolean | EventListenerOptions,\n  ): void;\n  public override removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions,\n  ): void {\n    super.removeEventListener(type, listener, options);\n  }\n  public emitEvent<K extends keyof E, D extends UnpackCustomEvent<E[K]>>(\n    type: K,\n    eventInitDict?: CustomEventInit<D>,\n  ): boolean {\n    return this.dispatchEvent(\n      new CustomEvent<D>(\n        type as string,\n        Object.assign(\n          {\n            bubbles: true,\n            cancelable: false,\n            composed: true,\n            detail: {},\n          },\n          eventInitDict,\n        ),\n      ),\n    );\n  }\n}\n"]}